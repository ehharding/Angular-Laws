{"version":3,"mappings":"qQASA,MAAMA,EAAkB,CACtB,CAAEC,KAAO,GAAIC,UCOf,MAAM,QAQJC,YAAoCC,EAAmCC,GAAnCC,eAAmCA,oBAPhEA,oBAA6B,IAAIC,KAAU,CAChDC,SAAW,IAAIC,KAAY,GAAIC,eAC/BC,SAAW,IAAIF,KAAY,GAAIC,iBAGhBJ,0BAAgD,IAAIM,IAAuB,GAIrFC,cACLP,KAAKQ,qBAAqBC,MAAK,GAC/BT,KAAKQ,qBAAqBE,WAOrBC,QAAK,IAEJC,EAFIC,OACVb,KAAKD,aAAae,OAAOd,KAAKe,eAAeC,MAAMd,SAAUF,KAAKe,eAAeC,MAAMX,UAAUY,MAAKC,OAAUlB,KAAKQ,uBAAuBW,UAAU,CACpJV,MAAIG,UAAG,UAAMQ,SACLP,EAAKf,QAAQuB,SAAS,CAAC,OAD3B,6CAGJC,MAAMC,qDAxBCC,GAAcC,iDAAdD,EAAcE,8fCjB3BD,gBACEA,iBACEA,iBACEA,oBACEA,gBAAiBA,kBAAQA,iBAAKA,QAASA,QACvCA,uBAEAA,kBACEA,iBACEA,kBACEA,6BACEA,sBAAWA,qBAAQA,QACnBA,oBACAA,sBAAWA,mBAAQA,qBAAQA,QAAUA,0BAAYA,QACnDA,QACFA,QAEAA,kBACEA,6BACEA,sBAAWA,qBAAQA,QACnBA,oBACAA,sBAAWA,mBAAQA,qBAAQA,QAAUA,0BAAYA,QACnDA,QACFA,QACFA,QAEAA,qBAA4FA,gCAASE,YAASF,kBAAKA,QACrHA,QACFA,QACFA,QACFA,QACFA,eAxBcA,6CAmBoDA,mKDTrDD,GAAb,KDAO,IAAMI,EAAb,MAAM,sDAAOA,4DAFD,CAACC,cAAsBnC,IADtBmC,QAGAD,GAAb,iBGCO,IAAME,EAAb,MAAM,sDAAOA,4DAFD,CAACC,KAAiBC,KAAeC,IAAkBL,EAAoBM,QAEtEJ,GAAb","names":["ROUTES","path","component","constructor","_router","_userService","this","FormGroup","userName","FormControl","Validators","password","ReplaySubject","ngOnDestroy","_componentDestroyed$","next","complete","login","i","e","login$","loginFormGroup","value","pipe","takeUntil","subscribe","_user","navigate","error","_errorResponse","LoginComponent","i0","selectors","ctx","LoginRoutingModule","RouterModule","LoginModule","MatButtonModule","MatCardModule","MatDividerModule","SharedModule"],"sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"sourcesContent":["/******************************************************************************************************************************************************************************\n * This file handles navigation for the \"Login\" module. The URLs defined here are children of the \"/login\" route.\n *****************************************************************************************************************************************************************************/\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { LoginComponent } from '@login/login.component';\n\nconst ROUTES : Routes = [\n  { path : '', component : LoginComponent }\n];\n\n@NgModule({\n  exports : [RouterModule],\n  imports : [RouterModule.forChild(ROUTES)]\n})\nexport class LoginRoutingModule { }\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { ReplaySubject, takeUntil } from 'rxjs';\n\nimport { User } from '@core/services/user/user.model';\n\nimport { UserService } from '@core/services/user/user.service';\n\n@Component({\n  changeDetection : ChangeDetectionStrategy.OnPush,\n  selector : 'pf-login',\n  styleUrls : ['login.component.scss'],\n  templateUrl : 'login.component.html'\n})\nexport class LoginComponent implements OnDestroy {\n  public loginFormGroup : FormGroup = new FormGroup({\n    userName : new FormControl('', Validators.required),\n    password : new FormControl('', Validators.required)\n  });\n\n  private readonly _componentDestroyed$ : ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n\n  public constructor(private readonly _router : Router, private readonly _userService : UserService) { }\n\n  public ngOnDestroy() : void {\n    this._componentDestroyed$.next(true);\n    this._componentDestroyed$.complete();\n  }\n\n  /**\n   * This function logs the user into the application but should only be callable when the status of the login FormGroup is valid. For now, beyond logging the user in, it\n   * merely navigates the user back to the home page.\n   */\n  public login() : void {\n    this._userService.login$(this.loginFormGroup.value.userName, this.loginFormGroup.value.password).pipe(takeUntil(this._componentDestroyed$)).subscribe({\n      next : async(_user : User) : Promise<void> => {\n        await this._router.navigate(['']);\n      },\n      error(_errorResponse : HttpErrorResponse) : void { }\n    });\n  }\n}\n","<main>\n  <div class=\"align-items-center justify-content-center text-center d-flex flex-row w-100\">\n    <div class=\"position-absolute pf-t-30 pf-w-40\">\n      <mat-card>\n        <h1 class=\"fs-4\"><strong>Login</strong></h1>\n        <mat-divider></mat-divider>\n\n        <form [formGroup]=\"loginFormGroup\">\n          <div class=\"mb-3 mt-3 row\">\n            <div class=\"col w-50\">\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>USERNAME</mat-label>\n                <input matInput formControlName=\"userName\" type=\"text\"/>\n                <mat-error><strong>USERNAME</strong> is required.</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col w-50\">\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>PASSWORD</mat-label>\n                <input matInput formControlName=\"password\" type=\"text\"/>\n                <mat-error><strong>PASSWORD</strong> is required.</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <button mat-raised-button class=\"w-100\" color=\"primary\" [disabled]=\"loginFormGroup.invalid\" (click)=\"login()\">LOGIN</button>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n</main>\n","/******************************************************************************************************************************************************************************\n * This module serves as the repository for all modules and components associated with the \"Login\" portion of the application.\n *****************************************************************************************************************************************************************************/\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { NgModule } from '@angular/core';\n\nimport { LoginRoutingModule } from '@login/login-routing.module';\nimport { SharedModule } from '@shared/shared.module';\n\nimport { LoginComponent } from '@login/login.component';\n\n@NgModule({\n  declarations : [LoginComponent],\n  imports : [MatButtonModule, MatCardModule, MatDividerModule, LoginRoutingModule, SharedModule]\n})\nexport class LoginModule { }\n"],"sourceRoot":"webpack:///","file":"972.js"}