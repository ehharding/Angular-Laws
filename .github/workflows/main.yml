######################################################################################################################################################
# Copyright 2021 Evan H. Harding. All Rights Reserved.
#
# This is a GitHub Actions workflow file. It is written in YAML and specifies a series of commands that execute when certain events occur. Currently,
# all jobs in this file are running on an Ubuntu Linux host. See https://github.com/actions/virtual-environments for a list of options.
#
# `node_modules` is cached based on a hash of `package.json` for performance reasons. If the dependencies change, the hash should change as well,
# meaning a fresh `npm install` should be triggered.
#
#   * repository-checkout - Checks out The `main` GitHub repository branch for Fan Fiction.com and uploads the repository as an artifact
#   * test                - Runs unit tests and uploads `coverage-report` as an artifact
#   * eslint-report       - Runs ESLint on the project and uploads `eslint-report.html` as an artifact
#   * build-production    - Runs a production build and uploads `docs` as an artifact, named as suggested by GitHub Pages
#   * copy-index-to-404   - Copies `index.html` to `404.html` as part of the requirements for GitHub Pages
#   * deploy              - Deploys the production build distributable to GitHub Pages for hosting
#
# {@link https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions | Introduction to GitHub Actions}
# {@link https://angular.io/guide/deployment#deploy-to-github-pages | Angular Guide To Deploying To GitHub Pages}
######################################################################################################################################################

name : Fan Fiction.com

# Triggers The Workflow On `push` Events But Only For The `main` Branch
on :
  push :
    branches : [main]

  # Allows The Workflow To Be Run Manually From The `Actions` Tab
  workflow_dispatch :

jobs :
  ########## JOB 1 - REPOSITORY-CHECKOUT ##########
  repository-checkout :
    runs-on : ubuntu-latest

    steps :
      - name : Configuration
        run : |
          echo '--------------------------------------------- ENVIRONMENT INFORMATION ---------------------------------------------'
          echo 'GitHub Event Name:              '${{ github.event_name }}
          echo 'GitHub API URL:                 '$GITHUB_API_URL
          echo 'GitHub GraphQL API URL:         '$GITHUB_GRAPHQL_URL
          echo 'GitHub Server URL:              '$GITHUB_SERVER_URL
          echo 'Workflow Branch:                '$GITHUB_REF
          echo 'Workflow URL:                   '$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          echo 'Workflow WebHook Event:         '$GITHUB_EVENT_NAME
          echo 'Workflow WebHook Event Payload: '$GITHUB_EVENT_PATH
          echo 'Workflow Repository:            '$GITHUB_REPOSITORY
          echo 'Workflow Initiator:             '$GITHUB_ACTOR
          echo 'Workflow Run ID:                '$GITHUB_RUN_ID
          echo 'Workflow Run Number:            '$GITHUB_RUN_NUMBER
          echo 'Workflow Name:                  '$GITHUB_WORKFLOW
          echo 'Workspace:                      '$GITHUB_WORKSPACE
          echo ''
          echo 'See https://docs.github.com/en/actions/reference/environment-variables'

          echo '------------------------------------------------ RUNNER INFORMATION -----------------------------------------------'
          echo 'Runner Operating System:    '${{ runner.os }}
          echo 'Runner Temporary Directory: '${{ runner.temp }}
          echo 'Runner Tools:               '${{ runner.tool_cache }}
          echo '-------------------------------------------------------------------------------------------------------------------'
          git config --global init.defaultBranch main

      - name : Checkout Latest Repository Snapshot - Commit SHA ${{ github.sha }}
        uses : actions/checkout@v2
        with :
          path : ''
          repository : ${{ github.repository }}
          token : ${{ github.token }}
          ref : main
          clean : true
          lfs : false
          persist-credentials : true
          ssh-strict : true
          submodules : true
          fetch-depth : 0 # Fetches All History For All Branches And Tags

      - name : Upload Repository Snapshot Artifact - `fan-fiction-dot-com`
        uses : actions/upload-artifact@v2
        with :
          name : fan-fiction-dot-com
          path : '/home/runner/work/FanFiction.com/FanFiction.com'
          retention-days : 2

  ########## JOB 2 - TEST ##########
  test :
    needs : repository-checkout
    runs-on : ubuntu-latest
    strategy :
      matrix :
        node-version : [15.X]

    steps :
      - name : Setup Node.js ${{ matrix.node-version }}
        uses : actions/setup-node@v2
        with :
          node-version : ${{ matrix.node-version }}

      - name : Checkout Latest Repository Snapshot - Commit SHA ${{ github.sha }}
        uses : actions/download-artifact@v2
        with :
          name : fan-fiction-dot-com

      - name : Check Cache Integrity / Existence Of `node_modules` When Hashed Against `package.json`
        id : node-modules-cache
        uses : actions/cache@v2
        with :
          path : '/home/runner/work/FanFiction.com/FanFiction.com/node_modules'
          key : ${{ matrix.node-version }}-node-modules-${{ hashFiles('**/package.json') }}

      - name : Install NPM Dependencies If Required
        # Caches Older Than Two Days (GitHub Setting) Are Evicted Based On Age Or If The 5GB Cache Limit Is Exceeded
        if : steps.node-modules-cache.outputs.cache-hit != 'true'
        run : |
          echo 'Installing Dependencies Defined In `package.json` Using NPM... This May Take Awhile'
          npm install

      - name : Run Angular Unit Tests Within Headless Firefox
        run : |
          echo 'Starting Up The Angular And Jasmine/Karma Frameworks...'

          npm run ng
          npm run test

      - name : Upload Unit Testing Code Coverage Artifact - `coverage-report`
        uses : actions/upload-artifact@v2
        with :
          name : coverage-report
          path : '/home/runner/work/FanFiction.com/FanFiction.com/coverage-report'
          retention-days : 2

  ########## JOB 3 - ESLINT-REPORT ##########
  eslint-report :
    needs : test
    runs-on : ubuntu-latest
    strategy :
      matrix :
        node-version : [15.X]

    steps :
      - name : Setup Node.js ${{ matrix.node-version }}
        uses : actions/setup-node@v2
        with :
          node-version : ${{ matrix.node-version }}

      - name : Checkout Latest Repository Snapshot - Commit SHA ${{ github.sha }}
        uses : actions/download-artifact@v2
        with :
          name : fan-fiction-dot-com

      - name : Check Cache Integrity / Existence Of `node_modules` When Hashed Against `package.json`
        id : node-modules-cache
        uses : actions/cache@v2
        with :
          path : '/home/runner/work/FanFiction.com/FanFiction.com/node_modules'
          key : ${{ matrix.node-version }}-node-modules-${{ hashFiles('**/package.json') }}

      - name : Install NPM Dependencies If Required
        # Caches Older Than Two Days (GitHub Setting) Are Evicted Based On Age Or If The 5GB Cache Limit Is Exceeded
        if : steps.node-modules-cache.outputs.cache-hit != 'true'
        run : |
          echo 'Installing Dependencies Defined In `package.json` Using NPM... This May Take Awhile'
          npm install

      - name : Run ESLint
        run : |
          echo 'Running ESLint And Generating HTML Report...'

          npm run lint:report

      - name : Upload ESLint Linting Artifact - `eslint-report`
        uses : actions/upload-artifact@v2
        with :
          name : eslint-report
          path : '/home/runner/work/FanFiction.com/FanFiction.com/eslint-report.html'
          retention-days : 2

  ########## JOB 4 - BUILD-PRODUCTION ##########
  build-production :
    needs : eslint-report
    runs-on : ubuntu-latest
    strategy :
      matrix :
        node-version : [15.X]

    steps :
      - name : Setup Node.js ${{ matrix.node-version }}
        uses : actions/setup-node@v2
        with :
          node-version : ${{ matrix.node-version }}

      - name : Checkout Latest Repository Snapshot - Commit SHA ${{ github.sha }}
        uses : actions/download-artifact@v2
        with :
          name : fan-fiction-dot-com

      - name : Check Cache Integrity / Existence Of `node_modules` When Hashed Against `package.json`
        id : node-modules-cache
        uses : actions/cache@v2
        with :
          path : '/home/runner/work/FanFiction.com/FanFiction.com/node_modules'
          key : ${{ matrix.node-version }}-node-modules-${{ hashFiles('**/package.json') }}

      - name : Install NPM Dependencies If Required
        # Caches Older Than Two Days (GitHub Setting) Are Evicted Based On Age Or If The 5GB Cache Limit Is Exceeded
        if : steps.node-modules-cache.outputs.cache-hit != 'true'
        run : |
          echo 'Installing Dependencies Defined In `package.json` Using NPM... This May Take Awhile'
          npm install

      - name : Create Production Build Distributable - `docs`
        run : |
          echo 'Starting Up The Angular Framework...'

          npm run ng
          npm run build:prod

      - name : Upload Production Build Distributable Artifact - `docs`
        uses : actions/upload-artifact@v2
        with :
          name : docs
          path : '/home/runner/work/FanFiction.com/FanFiction.com/docs'
          retention-days : 2

  ########## JOB 5 - COPY-INDEX-TO-404 ##########
  copy-index-to-404 :
    needs : build-production
    runs-on : ubuntu-latest

    steps :
      - name : Download Production Build Distributable - `docs`
        uses : actions/download-artifact@v2
        with :
          name : docs
          path : 'docs'

      - name : Copy `index.html` To `404.html` For GitHub Pages
        run : |
          echo 'Copying Contents Of `docs/index.html` To `docs/404.html`...'
          cp -v docs/index.html docs/404.html

      - name : Upload Modified Production Build Distributable Artifact - `docs`
        uses : actions/upload-artifact@v2
        with :
          name : docs
          path : 'docs'
          retention-days : 2

  ########## JOB 6 - DEPLOY ##########
  deploy :
    needs : copy-index-to-404
    runs-on : ubuntu-latest

    steps :
      - name : Download Production Build Distributable - `docs`
        uses : actions/download-artifact@v2
        with :
          name : docs
          path : 'docs'

      - name : Deploy Production Build Distributable To GitHub Pages - `docs`
        uses : JamesIves/github-pages-deploy-action@4.0.0
        with :
          branch : gh-pages
          folder : docs
