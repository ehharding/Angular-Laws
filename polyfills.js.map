{
  "version": 3,
  "sources": ["node_modules/zone.js/fesm2015/zone.js"],
  "sourcesContent": ["'use strict';\n/**\n * @license Angular v15.1.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            var _a;\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            var _a;\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch (_a) {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],
  "mappings": "CAaE,SAAUA,EAAQ,CAChB,IAAMC,EAAcD,EAAO,YAC3B,SAASE,EAAKC,EAAM,CAChBF,GAAeA,EAAY,MAAWA,EAAY,KAAQE,CAAI,CAClE,CACA,SAASC,EAAmBD,EAAME,EAAO,CACrCJ,GAAeA,EAAY,SAAcA,EAAY,QAAWE,EAAME,CAAK,CAC/E,CACAH,EAAK,MAAM,EAIX,IAAMI,EAAeN,EAAO,sBAA2B,kBACvD,SAASO,EAAWJ,EAAM,CACtB,OAAOG,EAAeH,CAC1B,CACA,IAAMK,EAAiBR,EAAOO,EAAW,yBAAyB,KAAO,GACzE,GAAIP,EAAO,KAAS,CAUhB,GAAIQ,GAAkB,OAAOR,EAAO,KAAQO,YAAe,WACvD,MAAM,IAAIE,MAAM,sBAAsB,EAGtC,OAAOT,EAAO,IAEtB,CAAC,IACKU,GAAI,IAAA,CAAV,MAAMA,CAAK,CACPC,YAAYC,EAAQC,EAAU,CAC1B,KAAKC,QAAUF,EACf,KAAKG,MAAQF,EAAWA,EAASV,MAAQ,UAAY,SACrD,KAAKa,YAAcH,GAAYA,EAASI,YAAc,CAAC,EACvD,KAAKC,cACD,IAAIC,EAAc,KAAM,KAAKL,SAAW,KAAKA,QAAQI,cAAeL,CAAQ,CACpF,CACA,OAAOO,mBAAoB,CACvB,GAAIpB,EAAO,UAAeqB,GAAQ,iBAC9B,MAAM,IAAIZ,MAAM,+RAI0C,CAElE,CACA,WAAWa,MAAO,CACd,IAAIC,EAAOb,EAAKc,QAChB,KAAOD,EAAKX,QACRW,EAAOA,EAAKX,OAEhB,OAAOW,CACX,CACA,WAAWC,SAAU,CACjB,OAAOC,EAAkBF,IAC7B,CACA,WAAWG,aAAc,CACrB,OAAOC,EACX,CAEA,OAAOC,aAAazB,EAAM0B,EAAIC,EAAkB,GAAO,CACnD,GAAIT,GAAQU,eAAe5B,CAAI,GAI3B,GAAI,CAAC2B,GAAmBtB,EACpB,MAAMC,MAAM,yBAA2BN,CAAI,UAG1C,CAACH,EAAO,kBAAoBG,GAAO,CACxC,IAAM6B,EAAW,QAAU7B,EAC3BD,EAAK8B,CAAQ,EACbX,GAAQlB,GAAQ0B,EAAG7B,EAAQU,EAAMuB,CAAI,EACrC7B,EAAmB4B,EAAUA,CAAQ,CACzC,CACJ,CACA,IAAIpB,QAAS,CACT,OAAO,KAAKE,OAChB,CACA,IAAIX,MAAO,CACP,OAAO,KAAKY,KAChB,CACAmB,IAAIC,EAAK,CACL,IAAMZ,EAAO,KAAKa,YAAYD,CAAG,EACjC,GAAIZ,EACA,OAAOA,EAAKP,YAAYmB,EAChC,CACAC,YAAYD,EAAK,CACb,IAAIX,EAAU,KACd,KAAOA,GAAS,CACZ,GAAIA,EAAQR,YAAYe,eAAeI,CAAG,EACtC,OAAOX,EAEXA,EAAUA,EAAQV,OACtB,CACA,OAAO,IACX,CACAuB,KAAKxB,EAAU,CACX,GAAI,CAACA,EACD,MAAM,IAAIJ,MAAM,oBAAoB,EACxC,OAAO,KAAKS,cAAcmB,KAAK,KAAMxB,CAAQ,CACjD,CACAyB,KAAKC,EAAUC,EAAQ,CACnB,GAAI,OAAOD,GAAa,WACpB,MAAM,IAAI9B,MAAM,2BAA6B8B,CAAQ,EAEzD,IAAME,EAAY,KAAKvB,cAAcwB,UAAU,KAAMH,EAAUC,CAAM,EAC/DjB,EAAO,KACb,OAAO,UAAY,CACf,OAAOA,EAAKoB,WAAWF,EAAW,KAAMG,UAAWJ,CAAM,CAC7D,CACJ,CACAK,IAAIN,EAAUO,EAAWC,EAAWP,EAAQ,CACxCf,EAAoB,CAAEb,OAAQa,EAAmBF,KAAM,IAAK,EAC5D,GAAI,CACA,OAAO,KAAKL,cAAc8B,OAAO,KAAMT,EAAUO,EAAWC,EAAWP,CAAM,CACjF,QAAC,CAEGf,EAAoBA,EAAkBb,MAC1C,CACJ,CACA+B,WAAWJ,EAAUO,EAAY,KAAMC,EAAWP,EAAQ,CACtDf,EAAoB,CAAEb,OAAQa,EAAmBF,KAAM,IAAK,EAC5D,GAAI,CACA,GAAI,CACA,OAAO,KAAKL,cAAc8B,OAAO,KAAMT,EAAUO,EAAWC,EAAWP,CAAM,CACjF,OACOS,EAAP,CACI,GAAI,KAAK/B,cAAcgC,YAAY,KAAMD,CAAK,EAC1C,MAAMA,CAEd,CACJ,QAAC,CAEGxB,EAAoBA,EAAkBb,MAC1C,CACJ,CACAuC,QAAQC,EAAMN,EAAWC,EAAW,CAChC,GAAIK,EAAK7B,MAAQ,KACb,MAAM,IAAId,MAAM,+DACX2C,EAAK7B,MAAQ8B,GAASlD,KAAO,gBAAkB,KAAKA,KAAO,GAAG,EAKvE,GAAIiD,EAAKE,QAAUC,IAAiBH,EAAKI,OAASC,GAAaL,EAAKI,OAASE,GACzE,OAEJ,IAAMC,EAAeP,EAAKE,OAASM,EACnCD,GAAgBP,EAAKS,cAAcD,EAASE,CAAS,EACrDV,EAAKW,WACL,IAAMC,EAAerC,GACrBA,GAAeyB,EACf3B,EAAoB,CAAEb,OAAQa,EAAmBF,KAAM,IAAK,EAC5D,GAAI,CACI6B,EAAKI,MAAQE,GAAaN,EAAKa,MAAQ,CAACb,EAAKa,KAAKC,aAClDd,EAAKe,SAAWC,QAEpB,GAAI,CACA,OAAO,KAAKlD,cAAcmD,WAAW,KAAMjB,EAAMN,EAAWC,CAAS,CACzE,OACOE,EAAP,CACI,GAAI,KAAK/B,cAAcgC,YAAY,KAAMD,CAAK,EAC1C,MAAMA,CAEd,CACJ,QAAC,CAIOG,EAAKE,QAAUC,GAAgBH,EAAKE,QAAUgB,IAC1ClB,EAAKI,MAAQC,GAAcL,EAAKa,MAAQb,EAAKa,KAAKC,WAClDP,GAAgBP,EAAKS,cAAcC,EAAWF,CAAO,GAGrDR,EAAKW,SAAW,EAChB,KAAKQ,iBAAiBnB,EAAM,EAAE,EAC9BO,GACIP,EAAKS,cAAcN,EAAcK,EAASL,CAAY,IAGlE9B,EAAoBA,EAAkBb,OACtCe,GAAeqC,CACnB,CACJ,CACAQ,aAAapB,EAAM,CACf,GAAIA,EAAK7B,MAAQ6B,EAAK7B,OAAS,KAAM,CAGjC,IAAIkD,EAAU,KACd,KAAOA,GAAS,CACZ,GAAIA,IAAYrB,EAAK7B,KACjB,MAAMd,MAAO,8BAA6B,KAAKN,kDAAkDiD,EAAK7B,KAAKpB,MAAM,EAErHsE,EAAUA,EAAQ7D,MACtB,CACJ,CACAwC,EAAKS,cAAca,EAAYnB,CAAY,EAC3C,IAAMoB,EAAgB,CAAA,EACtBvB,EAAKwB,eAAiBD,EACtBvB,EAAKyB,MAAQ,KACb,GAAI,CACAzB,EAAO,KAAKlC,cAAcsD,aAAa,KAAMpB,CAAI,CACrD,OACO0B,EAAP,CAGI1B,MAAAA,EAAKS,cAAcS,EAASI,EAAYnB,CAAY,EAEpD,KAAKrC,cAAcgC,YAAY,KAAM4B,CAAG,EAClCA,CACV,CACA,OAAI1B,EAAKwB,iBAAmBD,GAExB,KAAKJ,iBAAiBnB,EAAM,CAAC,EAE7BA,EAAKE,OAASoB,GACdtB,EAAKS,cAAcC,EAAWY,CAAU,EAErCtB,CACX,CACA2B,kBAAkBvC,EAAQD,EAAU0B,EAAMe,EAAgB,CACtD,OAAO,KAAKR,aAAa,IAAIS,EAASC,EAAW1C,EAAQD,EAAU0B,EAAMe,EAAgBZ,MAAS,CAAC,CACvG,CACAe,kBAAkB3C,EAAQD,EAAU0B,EAAMe,EAAgBI,EAAc,CACpE,OAAO,KAAKZ,aAAa,IAAIS,EAASvB,EAAWlB,EAAQD,EAAU0B,EAAMe,EAAgBI,CAAY,CAAC,CAC1G,CACAC,kBAAkB7C,EAAQD,EAAU0B,EAAMe,EAAgBI,EAAc,CACpE,OAAO,KAAKZ,aAAa,IAAIS,EAASxB,EAAWjB,EAAQD,EAAU0B,EAAMe,EAAgBI,CAAY,CAAC,CAC1G,CACAE,WAAWlC,EAAM,CACb,GAAIA,EAAK7B,MAAQ,KACb,MAAM,IAAId,MAAM,qEACX2C,EAAK7B,MAAQ8B,GAASlD,KAAO,gBAAkB,KAAKA,KAAO,GAAG,EACvE,GAAIiD,EAAAA,EAAKE,QAAUQ,GAAaV,EAAKE,QAAUM,GAG/CR,CAAAA,EAAKS,cAAc0B,EAAWzB,EAAWF,CAAO,EAChD,GAAI,CACA,KAAK1C,cAAcoE,WAAW,KAAMlC,CAAI,CAC5C,OACO0B,EAAP,CAEI1B,MAAAA,EAAKS,cAAcS,EAASiB,CAAS,EACrC,KAAKrE,cAAcgC,YAAY,KAAM4B,CAAG,EAClCA,CACV,CACA,YAAKP,iBAAiBnB,EAAM,EAAE,EAC9BA,EAAKS,cAAcN,EAAcgC,CAAS,EAC1CnC,EAAKW,SAAW,EACTX,EACX,CACAmB,iBAAiBnB,EAAMoC,EAAO,CAC1B,IAAMb,EAAgBvB,EAAKwB,eACvBY,GAAS,KACTpC,EAAKwB,eAAiB,MAE1B,QAASa,EAAI,EAAGA,EAAId,EAAce,OAAQD,IACtCd,EAAcc,GAAGlB,iBAAiBnB,EAAKI,KAAMgC,CAAK,CAE1D,CACJ,CAEA9E,OAAAA,EAAKH,WAAaA,EA1OZG,CAAI,GAAA,EA2OJiF,EAAc,CAChBxF,KAAM,GACNyF,UAAW,CAACC,EAAUC,EAAGC,EAAQC,IAAiBH,EAASI,QAAQF,EAAQC,CAAY,EACvFE,eAAgB,CAACL,EAAUC,EAAGC,EAAQ3C,IAASyC,EAASrB,aAAauB,EAAQ3C,CAAI,EACjF+C,aAAc,CAACN,EAAUC,EAAGC,EAAQ3C,EAAMN,EAAWC,IAAc8C,EAASxB,WAAW0B,EAAQ3C,EAAMN,EAAWC,CAAS,EACzHqD,aAAc,CAACP,EAAUC,EAAGC,EAAQ3C,IAASyC,EAASP,WAAWS,EAAQ3C,CAAI,CACjF,EACA,MAAMjC,CAAc,CAChBR,YAAYY,EAAM8E,EAAgBxF,EAAU,CACxC,KAAKyF,YAAc,CAAE,UAAa,EAAG,UAAa,EAAG,UAAa,CAAE,EACpE,KAAK/E,KAAOA,EACZ,KAAKgF,gBAAkBF,EACvB,KAAKG,QAAU3F,IAAaA,GAAYA,EAAS4F,OAAS5F,EAAWwF,EAAeG,SACpF,KAAKE,UAAY7F,IAAaA,EAAS4F,OAASJ,EAAiBA,EAAeK,WAChF,KAAKC,cACD9F,IAAaA,EAAS4F,OAAS,KAAKlF,KAAO8E,EAAeM,eAC9D,KAAKC,aACD/F,IAAaA,EAASgG,YAAchG,EAAWwF,EAAeO,cAClE,KAAKE,eACDjG,IAAaA,EAASgG,YAAcR,EAAiBA,EAAeS,gBACxE,KAAKC,mBACDlG,IAAaA,EAASgG,YAAc,KAAKtF,KAAO8E,EAAeU,oBACnE,KAAKC,UAAYnG,IAAaA,EAASoG,SAAWpG,EAAWwF,EAAeW,WAC5E,KAAKE,YACDrG,IAAaA,EAASoG,SAAWZ,EAAiBA,EAAea,aACrE,KAAKC,gBACDtG,IAAaA,EAASoG,SAAW,KAAK1F,KAAO8E,EAAec,iBAChE,KAAKC,eACDvG,IAAaA,EAASwG,cAAgBxG,EAAWwF,EAAee,gBACpE,KAAKE,iBACDzG,IAAaA,EAASwG,cAAgBhB,EAAiBA,EAAeiB,kBAC1E,KAAKC,qBACD1G,IAAaA,EAASwG,cAAgB,KAAK9F,KAAO8E,EAAekB,sBACrE,KAAKC,gBACD3G,IAAaA,EAASqF,eAAiBrF,EAAWwF,EAAemB,iBACrE,KAAKC,kBAAoB5G,IACpBA,EAASqF,eAAiBG,EAAiBA,EAAeoB,mBAC/D,KAAKC,sBACD7G,IAAaA,EAASqF,eAAiB,KAAK3E,KAAO8E,EAAeqB,uBACtE,KAAKC,cACD9G,IAAaA,EAASsF,aAAetF,EAAWwF,EAAesB,eACnE,KAAKC,gBACD/G,IAAaA,EAASsF,aAAeE,EAAiBA,EAAeuB,iBACzE,KAAKC,oBACDhH,IAAaA,EAASsF,aAAe,KAAK5E,KAAO8E,EAAewB,qBACpE,KAAKC,cACDjH,IAAaA,EAASuF,aAAevF,EAAWwF,EAAeyB,eACnE,KAAKC,gBACDlH,IAAaA,EAASuF,aAAeC,EAAiBA,EAAe0B,iBACzE,KAAKC,oBACDnH,IAAaA,EAASuF,aAAe,KAAK7E,KAAO8E,EAAe2B,qBACpE,KAAKC,WAAa,KAClB,KAAKC,aAAe,KACpB,KAAKC,kBAAoB,KACzB,KAAKC,iBAAmB,KACxB,IAAMC,EAAkBxH,GAAYA,EAAS+E,UACvC0C,EAAgBjC,GAAkBA,EAAe4B,YACnDI,GAAmBC,KAGnB,KAAKL,WAAaI,EAAkBxH,EAAW8E,EAC/C,KAAKuC,aAAe7B,EACpB,KAAK8B,kBAAoB,KACzB,KAAKC,iBAAmB7G,EACnBV,EAASqF,iBACV,KAAKsB,gBAAkB7B,EACvB,KAAK8B,kBAAoBpB,EACzB,KAAKqB,sBAAwB,KAAKnG,MAEjCV,EAASsF,eACV,KAAKwB,cAAgBhC,EACrB,KAAKiC,gBAAkBvB,EACvB,KAAKwB,oBAAsB,KAAKtG,MAE/BV,EAASuF,eACV,KAAK0B,cAAgBnC,EACrB,KAAKoC,gBAAkB1B,EACvB,KAAK2B,oBAAsB,KAAKzG,MAG5C,CACAc,KAAKkG,EAAY1H,EAAU,CACvB,OAAO,KAAK2F,QAAU,KAAKA,QAAQC,OAAO,KAAKC,UAAW,KAAKnF,KAAMgH,EAAY1H,CAAQ,EACrF,IAAIH,EAAK6H,EAAY1H,CAAQ,CACrC,CACA6B,UAAU6F,EAAYhG,EAAUC,EAAQ,CACpC,OAAO,KAAKoE,aACR,KAAKA,aAAaC,YAAY,KAAKC,eAAgB,KAAKC,mBAAoBwB,EAAYhG,EAAUC,CAAM,EACxGD,CACR,CACAS,OAAOuF,EAAYhG,EAAUO,EAAWC,EAAWP,EAAQ,CACvD,OAAO,KAAKwE,UAAY,KAAKA,UAAUC,SAAS,KAAKC,YAAa,KAAKC,gBAAiBoB,EAAYhG,EAAUO,EAAWC,EAAWP,CAAM,EACtID,EAASiG,MAAM1F,EAAWC,CAAS,CAC3C,CACAG,YAAYqF,EAAYtF,EAAO,CAC3B,OAAO,KAAKmE,eACR,KAAKA,eAAeC,cAAc,KAAKC,iBAAkB,KAAKC,qBAAsBgB,EAAYtF,CAAK,EACrG,EACR,CACAuB,aAAa+D,EAAYnF,EAAM,CAC3B,IAAIqF,EAAarF,EACjB,GAAI,KAAKoE,gBACD,KAAKS,YACLQ,EAAW7D,eAAe8D,KAAK,KAAKP,iBAAiB,EAGzDM,EAAa,KAAKjB,gBAAgBtB,eAAe,KAAKuB,kBAAmB,KAAKC,sBAAuBa,EAAYnF,CAAI,EAEhHqF,IACDA,EAAarF,WAGbA,EAAKuF,WACLvF,EAAKuF,WAAWvF,CAAI,UAEfA,EAAKI,MAAQ0B,EAClBH,EAAkB3B,CAAI,MAGtB,OAAM,IAAI3C,MAAM,6BAA6B,EAGrD,OAAOgI,CACX,CACApE,WAAWkE,EAAYnF,EAAMN,EAAWC,EAAW,CAC/C,OAAO,KAAK4E,cAAgB,KAAKA,cAAcxB,aAAa,KAAKyB,gBAAiB,KAAKC,oBAAqBU,EAAYnF,EAAMN,EAAWC,CAAS,EAC9IK,EAAKb,SAASiG,MAAM1F,EAAWC,CAAS,CAChD,CACAuC,WAAWiD,EAAYnF,EAAM,CACzB,IAAIwF,EACJ,GAAI,KAAKd,cACLc,EAAQ,KAAKd,cAAc1B,aAAa,KAAK2B,gBAAiB,KAAKC,oBAAqBO,EAAYnF,CAAI,MAEvG,CACD,GAAI,CAACA,EAAKe,SACN,MAAM1D,MAAM,wBAAwB,EAExCmI,EAAQxF,EAAKe,SAASf,CAAI,CAC9B,CACA,OAAOwF,CACX,CACA3C,QAAQsC,EAAYM,EAAS,CAGzB,GAAI,CACA,KAAKZ,YACD,KAAKA,WAAWrC,UAAU,KAAKsC,aAAc,KAAKE,iBAAkBG,EAAYM,CAAO,CAC/F,OACO/D,EAAP,CACI,KAAK5B,YAAYqF,EAAYzD,CAAG,CACpC,CACJ,CAEAP,iBAAiBf,EAAMgC,EAAO,CAC1B,IAAMsD,EAAS,KAAKxC,YACdyC,EAAOD,EAAOtF,GACdwF,EAAOF,EAAOtF,GAAQuF,EAAOvD,EACnC,GAAIwD,EAAO,EACP,MAAM,IAAIvI,MAAM,0CAA0C,EAE9D,GAAIsI,GAAQ,GAAKC,GAAQ,EAAG,CACxB,IAAMH,EAAU,CACZ3D,UAAW4D,EAAO,UAAe,EACjCpF,UAAWoF,EAAO,UAAe,EACjCrF,UAAWqF,EAAO,UAAe,EACjCG,OAAQzF,CACZ,EACA,KAAKyC,QAAQ,KAAK1E,KAAMsH,CAAO,CACnC,CACJ,CACJ,CACA,MAAM5D,CAAS,CACXtE,YAAY6C,EAAMhB,EAAQD,EAAU2G,EAASP,EAAYxE,EAAU,CAa/D,GAXA,KAAKU,MAAQ,KACb,KAAKd,SAAW,EAEhB,KAAKa,eAAiB,KAEtB,KAAKuE,OAAS,eACd,KAAK3F,KAAOA,EACZ,KAAKhB,OAASA,EACd,KAAKyB,KAAOiF,EACZ,KAAKP,WAAaA,EAClB,KAAKxE,SAAWA,EACZ,CAAC5B,EACD,MAAM,IAAI9B,MAAM,yBAAyB,EAE7C,KAAK8B,SAAWA,EAChB,IAAM6G,EAAO,KAET5F,IAASC,GAAayF,GAAWA,EAAQG,KACzC,KAAKrG,OAASiC,EAASZ,WAGvB,KAAKrB,OAAS,UAAY,CACtB,OAAOiC,EAASZ,WAAWiF,KAAKtJ,EAAQoJ,EAAM,KAAMxG,SAAS,CACjE,CAER,CACA,OAAOyB,WAAWjB,EAAM2C,EAAQwD,EAAM,CAC7BnG,IACDA,EAAO,MAEXoG,KACA,GAAI,CACApG,OAAAA,EAAKW,WACEX,EAAK7B,KAAK4B,QAAQC,EAAM2C,EAAQwD,CAAI,CAC/C,QAAC,CAEOC,IAA6B,GAC7BC,EAAmB,EAEvBD,IACJ,CACJ,CACA,IAAIjI,MAAO,CACP,OAAO,KAAKsD,KAChB,CACA,IAAIvB,OAAQ,CACR,OAAO,KAAK6F,MAChB,CACAO,uBAAwB,CACpB,KAAK7F,cAAcN,EAAcmB,CAAU,CAC/C,CAEAb,cAAc8F,EAASC,EAAYC,EAAY,CAC3C,GAAI,KAAKV,SAAWS,GAAc,KAAKT,SAAWU,EAC9C,KAAKV,OAASQ,EACVA,GAAWpG,IACX,KAAKqB,eAAiB,UAI1B,OAAM,IAAInE,MAAO,GAAE,KAAK+C,SAAS,KAAKhB,mCAAmCmH,wBAA8BC,KAAcC,EAAa,QAAWA,EAAa,IAAO,YAAY,KAAKV,UAAU,CAEpM,CACAW,UAAW,CACP,OAAI,KAAK7F,MAAQ,OAAO,KAAKA,KAAK8F,SAAa,IACpC,KAAK9F,KAAK8F,SAASD,SAAQ,EAG3BE,OAAOC,UAAUH,SAASR,KAAK,IAAI,CAElD,CAGAY,QAAS,CACL,MAAO,CACH1G,KAAM,KAAKA,KACXF,MAAO,KAAKA,MACZd,OAAQ,KAAKA,OACbjB,KAAM,KAAKA,KAAKpB,KAChB4D,SAAU,KAAKA,QACnB,CACJ,CACJ,CAMA,IAAMoG,EAAmB5J,EAAW,YAAY,EAC1C6J,EAAgB7J,EAAW,SAAS,EACpC8J,EAAa9J,EAAW,MAAM,EAChC+J,EAAkB,CAAA,EAClBC,EAA4B,GAC5BC,EACJ,SAASC,EAAwBC,EAAM,CAMnC,GALKF,GACGxK,EAAOoK,KACPI,EAA8BxK,EAAOoK,GAAeO,QAAQ,CAAC,GAGjEH,EAA6B,CAC7B,IAAII,EAAaJ,EAA4BH,GACxCO,IAGDA,EAAaJ,EAA4B,MAE7CI,EAAWtB,KAAKkB,EAA6BE,CAAI,CACrD,MAEI1K,EAAOmK,GAAkBO,EAAM,CAAC,CAExC,CACA,SAAS3F,EAAkB3B,EAAM,CAGzBoG,KAA8B,GAAKc,EAAgB5E,SAAW,GAE9D+E,EAAwBhB,CAAmB,EAE/CrG,GAAQkH,EAAgB5B,KAAKtF,CAAI,CACrC,CACA,SAASqG,GAAsB,CAC3B,GAAI,CAACc,EAA2B,CAE5B,IADAA,EAA4B,GACrBD,EAAgB5E,QAAQ,CAC3B,IAAMmF,EAAQP,EACdA,EAAkB,CAAA,EAClB,QAAS7E,EAAI,EAAGA,EAAIoF,EAAMnF,OAAQD,IAAK,CACnC,IAAMrC,EAAOyH,EAAMpF,GACnB,GAAI,CACArC,EAAK7B,KAAK4B,QAAQC,EAAM,KAAM,IAAI,CACtC,OACOH,EAAP,CACIhB,EAAK6I,iBAAiB7H,CAAK,CAC/B,CACJ,CACJ,CACAhB,EAAK8I,mBAAkB,EACvBR,EAA4B,EAChC,CACJ,CAMA,IAAMlH,EAAU,CAAElD,KAAM,SAAU,EAC5BoD,EAAe,eAAgBmB,EAAa,aAAcZ,EAAY,YAAaF,EAAU,UAAW2B,EAAY,YAAajB,EAAU,UAC3IY,EAAY,YAAaxB,EAAY,YAAaD,EAAY,YAC9DpC,GAAU,CAAC,EACXY,EAAO,CACT+I,OAAQzK,EACR0K,iBAAkB,IAAMxJ,EACxBqJ,iBAAkBI,EAClBH,mBAAoBG,EACpBnG,kBAAmBA,EACnBoG,kBAAmB,IAAM,CAACzK,EAAKH,EAAW,iCAAiC,GAC3E6K,iBAAkB,IAAM,CAAA,EACxBC,kBAAmBH,EACnBI,YAAa,IAAMJ,EACnBK,cAAe,IAAM,CAAA,EACrBC,UAAW,IAAMN,EACjBO,eAAgB,IAAMP,EACtBQ,oBAAqB,IAAMR,EAC3BS,WAAY,IAAM,GAClBC,iBAAkB,IAAA,GAClBC,qBAAsB,IAAMX,EAC5BY,+BAAgC,IAAA,GAChCC,aAAc,IAAA,GACdC,WAAY,IAAM,CAAA,EAClBC,WAAY,IAAMf,EAClBgB,oBAAqB,IAAMhB,EAC3BiB,iBAAkB,IAAM,CAAA,EACxBC,sBAAuB,IAAMlB,EAC7BmB,kBAAmB,IAAMnB,EACzBoB,eAAgB,IAAMpB,EACtBT,wBAAyBA,CAC7B,EACIhJ,EAAoB,CAAEb,OAAQ,KAAMW,KAAM,IAAIb,EAAK,KAAM,IAAI,CAAE,EAC/DiB,GAAe,KACf6H,GAA4B,EAChC,SAAS0B,GAAO,CAAE,CAClB9K,OAAAA,EAAmB,OAAQ,MAAM,EAC1BJ,EAAO,KAAUU,CAC5B,GAAI,OAAO6L,OAAW,KAAeA,QAAU,OAAOnD,KAAS,KAAeA,MAAQpJ,MAAM,EAiB5F,IAAM8L,GAAiC9B,OAAOwC,yBAExCX,GAAuB7B,OAAOyC,eAE9BC,GAAuB1C,OAAO2C,eAE9BZ,GAAe/B,OAAO4C,OAEtBZ,GAAaa,MAAM5C,UAAU6C,MAE7BC,GAAyB,mBAEzBC,GAA4B,sBAE5BC,GAAiCvM,KAAKH,WAAWwM,EAAsB,EAEvEG,GAAoCxM,KAAKH,WAAWyM,EAAyB,EAE7EG,GAAW,OAEXC,GAAY,QAEZC,GAAqB3M,KAAKH,WAAW,EAAE,EAC7C,SAAS2L,GAAoB3J,EAAUC,EAAQ,CAC3C,OAAO9B,KAAKc,QAAQc,KAAKC,EAAUC,CAAM,CAC7C,CACA,SAAS8K,GAAiC9K,EAAQD,EAAU0B,EAAMe,EAAgBI,EAAc,CAC5F,OAAO1E,KAAKc,QAAQ2D,kBAAkB3C,EAAQD,EAAU0B,EAAMe,EAAgBI,CAAY,CAC9F,CACA,IAAMmI,EAAa7M,KAAKH,WAClBiN,GAAiB,OAAOjB,OAAW,IACnCkB,GAAiBD,GAAiBjB,OAASnI,OAC3CsJ,EAAUF,IAAkBC,IAAkB,OAAOrE,MAAS,UAAYA,MAAQpJ,OAClF2N,GAAmB,kBACzB,SAASpC,GAAchC,EAAM/G,EAAQ,CACjC,QAASiD,EAAI8D,EAAK7D,OAAS,EAAGD,GAAK,EAAGA,IAC9B,OAAO8D,EAAK9D,IAAO,aACnB8D,EAAK9D,GAAKyG,GAAoB3C,EAAK9D,GAAIjD,EAAS,IAAMiD,CAAC,GAG/D,OAAO8D,CACX,CACA,SAASqE,GAAe3D,EAAW4D,EAAS,CACxC,IAAMrL,EAASyH,EAAUtJ,YAAY,KACrC,QAAS8E,EAAI,EAAGA,EAAIoI,EAAQnI,OAAQD,IAAK,CACrC,IAAMtF,EAAO0N,EAAQpI,GACfI,EAAWoE,EAAU9J,GAC3B,GAAI0F,EAAU,CACV,IAAMiI,EAAgBhC,GAA+B7B,EAAW9J,CAAI,EACpE,GAAI,CAAC4N,GAAmBD,CAAa,EACjC,SAEJ7D,EAAU9J,IAAU0F,GAAa,CAC7B,IAAMmI,EAAU,UAAY,CACxB,OAAOnI,EAAS2C,MAAM,KAAM+C,GAAc3I,UAAWJ,EAAS,IAAMrC,CAAI,CAAC,CAC7E,EACAiM,OAAAA,GAAsB4B,EAASnI,CAAQ,EAChCmI,CACX,GAAGnI,CAAQ,CACf,CACJ,CACJ,CACA,SAASkI,GAAmBE,EAAc,CACtC,OAAKA,EAGDA,EAAaC,WAAa,GACnB,GAEJ,EAAE,OAAOD,EAAa/L,KAAQ,YAAc,OAAO+L,EAAaE,IAAQ,KALpE,EAMf,CACA,IAAMC,GAAe,OAAOC,kBAAsB,KAAejF,gBAAgBiF,kBAG3EC,GAAU,EAAE,OAAQZ,IAAY,OAAOA,EAAQa,QAAY,KAC7D,CAAC,EAAEzE,SAASR,KAAKoE,EAAQa,OAAO,IAAM,mBACpCC,GAAY,CAACF,IAAU,CAACF,IAAe,CAAC,EAAEZ,IAAkBC,GAAe,aAI3EgB,GAAQ,OAAOf,EAAQa,QAAY,KACrC,CAAC,EAAEzE,SAASR,KAAKoE,EAAQa,OAAO,IAAM,oBAAsB,CAACH,IAC7D,CAAC,EAAEZ,IAAkBC,GAAe,aAClCiB,GAAyB,CAAC,EAC1BC,GAAS,SAAUC,EAAO,CAI5B,GADAA,EAAQA,GAASlB,EAAQkB,MACrB,CAACA,EACD,OAEJ,IAAIC,EAAkBH,GAAuBE,EAAMpL,MAC9CqL,IACDA,EAAkBH,GAAuBE,EAAMpL,MAAQ+J,EAAW,cAAgBqB,EAAMpL,IAAI,GAEhG,IAAMuC,EAAS,MAAQ6I,EAAM7I,QAAU2H,EACjCoB,EAAW/I,EAAO8I,GACpBE,EACJ,GAAIP,IAAazI,IAAW0H,IAAkBmB,EAAMpL,OAAS,QAAS,CAIlE,IAAMwL,EAAaJ,EACnBG,EAASD,GACLA,EAASxF,KAAK,KAAM0F,EAAWC,QAASD,EAAWE,SAAUF,EAAWG,OAAQH,EAAWI,MAAOJ,EAAW/L,KAAK,EAClH8L,IAAW,IACXH,EAAMS,eAAc,CAE5B,MAEIN,EAASD,GAAYA,EAAStG,MAAM,KAAM5F,SAAS,EAC/CmM,GAAU3K,MAAa,CAAC2K,GACxBH,EAAMS,eAAc,EAG5B,OAAON,CACX,EACA,SAASO,GAAcC,EAAKC,EAAMvF,EAAW,CACzC,IAAIwF,EAAO3D,GAA+ByD,EAAKC,CAAI,EAUnD,GATI,CAACC,GAAQxF,GAEa6B,GAA+B7B,EAAWuF,CAAI,IAEhEC,EAAO,CAAEC,WAAY,GAAMC,aAAc,EAAK,GAKlD,CAACF,GAAQ,CAACA,EAAKE,aACf,OAEJ,IAAMC,EAAsBrC,EAAW,KAAOiC,EAAO,SAAS,EAC9D,GAAID,EAAIxN,eAAe6N,CAAmB,GAAKL,EAAIK,GAC/C,OAOJ,OAAOH,EAAKvB,SACZ,OAAOuB,EAAK7G,MACZ,IAAMiH,EAAkBJ,EAAKvN,IACvB4N,EAAkBL,EAAKtB,IAEvB4B,EAAYP,EAAK1C,MAAM,CAAC,EAC1B+B,EAAkBH,GAAuBqB,GACxClB,IACDA,EAAkBH,GAAuBqB,GAAaxC,EAAW,cAAgBwC,CAAS,GAE9FN,EAAKtB,IAAM,SAAU6B,EAAU,CAG3B,IAAIjK,EAAS,KAIb,GAHI,CAACA,GAAUwJ,IAAQ7B,IACnB3H,EAAS2H,GAET,CAAC3H,EACD,OAGA,OADkBA,EAAO8I,IACA,YACzB9I,EAAOkK,oBAAoBF,EAAWpB,EAAM,EAIhDmB,GAAmBA,EAAgBxG,KAAKvD,EAAQ,IAAI,EACpDA,EAAO8I,GAAmBmB,EACtB,OAAOA,GAAa,YACpBjK,EAAOmK,iBAAiBH,EAAWpB,GAAQ,EAAK,CAExD,EAGAc,EAAKvN,IAAM,UAAY,CAGnB,IAAI6D,EAAS,KAIb,GAHI,CAACA,GAAUwJ,IAAQ7B,IACnB3H,EAAS2H,GAET,CAAC3H,EACD,OAAO,KAEX,IAAM+I,EAAW/I,EAAO8I,GACxB,GAAIC,EACA,OAAOA,EAEN,GAAIe,EAAiB,CAOtB,IAAIjH,EAAQiH,EAAgBvG,KAAK,IAAI,EACrC,GAAIV,EACA6G,OAAAA,EAAKtB,IAAI7E,KAAK,KAAMV,CAAK,EACrB,OAAO7C,EAAO4H,KAAsB,YACpC5H,EAAOoK,gBAAgBX,CAAI,EAExB5G,CAEf,CACA,OAAO,IACX,EACAiD,GAAqB0D,EAAKC,EAAMC,CAAI,EACpCF,EAAIK,GAAuB,EAC/B,CACA,SAASvE,GAAkBkE,EAAKtO,EAAYgJ,EAAW,CACnD,GAAIhJ,EACA,QAASwE,EAAI,EAAGA,EAAIxE,EAAWyE,OAAQD,IACnC6J,GAAcC,EAAK,KAAOtO,EAAWwE,GAAIwE,CAAS,MAGrD,CACD,IAAMmG,EAAe,CAAA,EACrB,QAAWZ,KAAQD,EACXC,EAAK1C,MAAM,EAAG,CAAC,GAAK,MACpBsD,EAAa1H,KAAK8G,CAAI,EAG9B,QAASa,EAAI,EAAGA,EAAID,EAAa1K,OAAQ2K,IACrCf,GAAcC,EAAKa,EAAaC,GAAIpG,CAAS,CAErD,CACJ,CACA,IAAMqG,GAAsB/C,EAAW,kBAAkB,EAEzD,SAAStB,GAAWsE,EAAW,CAC3B,IAAMC,EAAgB9C,EAAQ6C,GAC9B,GAAI,CAACC,EACD,OAEJ9C,EAAQH,EAAWgD,CAAS,GAAKC,EACjC9C,EAAQ6C,GAAa,UAAY,CAC7B,IAAME,EAAIlF,GAAc3I,UAAW2N,CAAS,EAC5C,OAAQE,EAAE/K,OAAM,CACZ,IAAK,GACD,KAAK4K,IAAuB,IAAIE,EAChC,MACJ,IAAK,GACD,KAAKF,IAAuB,IAAIE,EAAcC,EAAE,EAAE,EAClD,MACJ,IAAK,GACD,KAAKH,IAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,EAAE,EACxD,MACJ,IAAK,GACD,KAAKH,IAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,EAAE,EAC9D,MACJ,IAAK,GACD,KAAKH,IAAuB,IAAIE,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,EAAE,EACpE,MACJ,QACI,MAAM,IAAIhQ,MAAM,oBAAoB,CAAE,CAElD,EAEA2L,GAAsBsB,EAAQ6C,GAAYC,CAAa,EACvD,IAAME,EAAW,IAAIF,EAAc,UAAY,CAAE,CAAC,EAC9ChB,EACJ,IAAKA,KAAQkB,EAELH,IAAc,kBAAoBf,IAAS,gBAE9C,SAAUA,EAAM,CACT,OAAOkB,EAASlB,IAAU,WAC1B9B,EAAQ6C,GAAWtG,UAAUuF,GAAQ,UAAY,CAC7C,OAAO,KAAKc,IAAqBd,GAAMhH,MAAM,KAAK8H,IAAsB1N,SAAS,CACrF,EAGAiJ,GAAqB6B,EAAQ6C,GAAWtG,UAAWuF,EAAM,CACrDrB,IAAK,SAAUtM,EAAI,CACX,OAAOA,GAAO,YACd,KAAKyO,IAAqBd,GAAQtD,GAAoBrK,EAAI0O,EAAY,IAAMf,CAAI,EAIhFpD,GAAsB,KAAKkE,IAAqBd,GAAO3N,CAAE,GAGzD,KAAKyO,IAAqBd,GAAQ3N,CAE1C,EACAK,IAAK,UAAY,CACb,OAAO,KAAKoO,IAAqBd,EACrC,CACJ,CAAC,CAET,EAAEA,CAAI,EAEV,IAAKA,KAAQgB,EACLhB,IAAS,aAAegB,EAAczO,eAAeyN,CAAI,IACzD9B,EAAQ6C,GAAWf,GAAQgB,EAAchB,GAGrD,CACA,SAASlE,GAAYvF,EAAQ5F,EAAMwQ,EAAS,CACxC,IAAIC,EAAQ7K,EACZ,KAAO6K,GAAS,CAACA,EAAM7O,eAAe5B,CAAI,GACtCyQ,EAAQlE,GAAqBkE,CAAK,EAElC,CAACA,GAAS7K,EAAO5F,KAEjByQ,EAAQ7K,GAEZ,IAAM8K,EAAetD,EAAWpN,CAAI,EAChC0F,EAAW,KACf,GAAI+K,IAAU,EAAE/K,EAAW+K,EAAMC,KAAkB,CAACD,EAAM7O,eAAe8O,CAAY,GAAI,CACrFhL,EAAW+K,EAAMC,GAAgBD,EAAMzQ,GAGvC,IAAMsP,EAAOmB,GAAS9E,GAA+B8E,EAAOzQ,CAAI,EAChE,GAAI4N,GAAmB0B,CAAI,EAAG,CAC1B,IAAMqB,EAAgBH,EAAQ9K,EAAUgL,EAAc1Q,CAAI,EAC1DyQ,EAAMzQ,GAAQ,UAAY,CACtB,OAAO2Q,EAAc,KAAMlO,SAAS,CACxC,EACAwJ,GAAsBwE,EAAMzQ,GAAO0F,CAAQ,CAC/C,CACJ,CACA,OAAOA,CACX,CAEA,SAAS4F,GAAe8D,EAAKwB,EAAUC,EAAa,CAChD,IAAIC,EAAY,KAChB,SAASzM,EAAapB,EAAM,CACxB,IAAMa,EAAOb,EAAKa,KAClBA,OAAAA,EAAKsF,KAAKtF,EAAKiN,OAAS,UAAY,CAChC9N,EAAKJ,OAAOwF,MAAM,KAAM5F,SAAS,CACrC,EACAqO,EAAUzI,MAAMvE,EAAK8B,OAAQ9B,EAAKsF,IAAI,EAC/BnG,CACX,CACA6N,EAAY3F,GAAYiE,EAAKwB,EAAWlL,GAAa,SAAUuD,EAAMG,EAAM,CACvE,IAAM4H,EAAOH,EAAY5H,EAAMG,CAAI,EACnC,OAAI4H,EAAKD,OAAS,GAAK,OAAO3H,EAAK4H,EAAKD,QAAW,WACxC5D,GAAiC6D,EAAKhR,KAAMoJ,EAAK4H,EAAKD,OAAQC,EAAM3M,CAAY,EAIhFqB,EAAS2C,MAAMY,EAAMG,CAAI,CAExC,CAAC,CACL,CACA,SAAS6C,GAAsB4B,EAASoD,EAAU,CAC9CpD,EAAQT,EAAW,kBAAkB,GAAK6D,CAC9C,CACA,IAAIC,GAAqB,GACrBC,GAAW,GACf,SAASC,IAAO,CACZ,GAAI,CACA,IAAMC,EAAK/D,GAAegE,UAAUC,UACpC,GAAIF,EAAGG,QAAQ,OAAO,IAAM,IAAMH,EAAGG,QAAQ,UAAU,IAAM,GACzD,MAAO,EAEf,MACA,CACA,CACA,MAAO,EACX,CACA,SAAShG,IAAa,CAClB,GAAI0F,GACA,OAAOC,GAEXD,GAAqB,GACrB,GAAI,CACA,IAAMG,EAAK/D,GAAegE,UAAUC,WAChCF,EAAGG,QAAQ,OAAO,IAAM,IAAMH,EAAGG,QAAQ,UAAU,IAAM,IAAMH,EAAGG,QAAQ,OAAO,IAAM,MACvFL,GAAW,GAEnB,MACA,CACA,CACA,OAAOA,EACX,CASA5Q,KAAKkB,aAAa,mBAAoB,CAAC5B,EAAQU,EAAMkR,IAAQ,CACzD,IAAM9F,EAAiC9B,OAAOwC,yBACxCX,EAAuB7B,OAAOyC,eACpC,SAASoF,EAAuBtC,EAAK,CACjC,GAAIA,GAAOA,EAAIzF,WAAaE,OAAOC,UAAUH,SAAU,CACnD,IAAMyG,EAAYhB,EAAI5O,aAAe4O,EAAI5O,YAAYR,KACrD,OAAQoQ,GAAwB,IAAM,KAAOuB,KAAKC,UAAUxC,CAAG,CACnE,CACA,OAAOA,EAAMA,EAAIzF,SAAQ,EAAKE,OAAOC,UAAUH,SAASR,KAAKiG,CAAG,CACpE,CACA,IAAMhP,EAAaqR,EAAI5G,OACjBgH,EAAyB,CAAA,EACzBC,EAA4CjS,EAAOO,EAAW,6CAA6C,KAAO,GAClH6J,EAAgB7J,EAAW,SAAS,EACpC8J,EAAa9J,EAAW,MAAM,EAC9B2R,EAAgB,oBACtBN,EAAI9G,iBAAoBqH,GAAM,CAC1B,GAAIP,EAAIzG,kBAAiB,EAAI,CACzB,IAAMiH,EAAYD,GAAKA,EAAEC,UACrBA,EACAC,QAAQpP,MAAM,+BAAgCmP,aAAqB3R,MAAQ2R,EAAUnD,QAAUmD,EAAW,UAAWD,EAAE5Q,KAAKpB,KAAM,UAAWgS,EAAE/O,MAAQ+O,EAAE/O,KAAKZ,OAAQ,WAAY4P,EAAWA,aAAqB3R,MAAQ2R,EAAUE,MAAQlO,MAAS,EAGrPiO,QAAQpP,MAAMkP,CAAC,CAEvB,CACJ,EACAP,EAAI7G,mBAAqB,IAAM,CAC3B,KAAOiH,EAAuBtM,QAAQ,CAClC,IAAM6M,EAAuBP,EAAuBQ,MAAK,EACzD,GAAI,CACAD,EAAqBhR,KAAKoB,WAAW,IAAM,CACvC,MAAI4P,EAAqBE,cACfF,EAAqBH,UAEzBG,CACV,CAAC,CACL,OACOtP,EAAP,CACIyP,EAAyBzP,CAAK,CAClC,CACJ,CACJ,EACA,IAAM0P,EAA6CpS,EAAW,kCAAkC,EAChG,SAASmS,EAAyBP,EAAG,CACjCP,EAAI9G,iBAAiBqH,CAAC,EACtB,GAAI,CACA,IAAMS,EAAUlS,EAAKiS,GACjB,OAAOC,GAAY,YACnBA,EAAQtJ,KAAK,KAAM6I,CAAC,CAE5B,MACA,CACA,CACJ,CACA,SAASU,EAAWjK,EAAO,CACvB,OAAOA,GAASA,EAAMkK,IAC1B,CACA,SAASC,EAAkBnK,EAAO,CAC9B,OAAOA,CACX,CACA,SAASoK,EAAiBZ,EAAW,CACjC,OAAOa,EAAiBC,OAAOd,CAAS,CAC5C,CACA,IAAMe,EAAc5S,EAAW,OAAO,EAChC6S,EAAc7S,EAAW,OAAO,EAChC8S,EAAgB9S,EAAW,SAAS,EACpC+S,EAA2B/S,EAAW,oBAAoB,EAC1DgT,EAA2BhT,EAAW,oBAAoB,EAC1DiC,EAAS,eACTgR,EAAa,KACbC,EAAW,GACXC,EAAW,GACXC,EAAoB,EAC1B,SAASC,EAAaC,EAASvQ,EAAO,CAClC,OAAQwQ,GAAM,CACV,GAAI,CACAC,EAAeF,EAASvQ,EAAOwQ,CAAC,CACpC,OACOhP,EAAP,CACIiP,EAAeF,EAAS,GAAO/O,CAAG,CACtC,CAEJ,CACJ,CACA,IAAMkP,EAAO,UAAY,CACrB,IAAIC,EAAY,GAChB,OAAO,SAAiBC,EAAiB,CACrC,OAAO,UAAY,CACXD,IAGJA,EAAY,GACZC,EAAgB1L,MAAM,KAAM5F,SAAS,EACzC,CACJ,CACJ,EACMuR,EAAa,+BACbC,GAA4B7T,EAAW,kBAAkB,EAE/D,SAASwT,EAAeF,EAASvQ,EAAOsF,EAAO,CAC3C,IAAMyL,EAAcL,EAAI,EACxB,GAAIH,IAAYjL,EACZ,MAAM,IAAI0L,UAAUH,CAAU,EAElC,GAAIN,EAAQV,KAAiBK,EAAY,CAErC,IAAIV,EAAO,KACX,GAAI,EACI,OAAOlK,GAAU,UAAY,OAAOA,GAAU,cAC9CkK,EAAOlK,GAASA,EAAMkK,KAE9B,OACOhO,EAAP,CACIuP,OAAAA,EAAY,IAAM,CACdN,EAAeF,EAAS,GAAO/O,CAAG,CACtC,CAAC,EAAC,EACK+O,CACX,CAEA,GAAIvQ,IAAUoQ,GAAY9K,aAAiBqK,GACvCrK,EAAM7G,eAAeoR,CAAW,GAAKvK,EAAM7G,eAAeqR,CAAW,GACrExK,EAAMuK,KAAiBK,EACvBe,GAAqB3L,CAAK,EAC1BmL,EAAeF,EAASjL,EAAMuK,GAAcvK,EAAMwK,EAAY,UAEzD9P,IAAUoQ,GAAY,OAAOZ,GAAS,WAC3C,GAAI,CACAA,EAAKxJ,KAAKV,EAAOyL,EAAYT,EAAaC,EAASvQ,CAAK,CAAC,EAAG+Q,EAAYT,EAAaC,EAAS,EAAK,CAAC,CAAC,CACzG,OACO/O,EAAP,CACIuP,EAAY,IAAM,CACdN,EAAeF,EAAS,GAAO/O,CAAG,CACtC,CAAC,EAAC,CACN,KAEC,CACD+O,EAAQV,GAAe7P,EACvB,IAAMuH,EAAQgJ,EAAQT,GAatB,GAZAS,EAAQT,GAAexK,EACnBiL,EAAQR,KAAmBA,GAEvB/P,IAAUmQ,IAGVI,EAAQV,GAAeU,EAAQN,GAC/BM,EAAQT,GAAeS,EAAQP,IAKnChQ,IAAUoQ,GAAY9K,aAAiBnI,MAAO,CAE9C,IAAM+T,EAAQ9T,EAAKgB,aAAehB,EAAKgB,YAAYuC,MAC/CvD,EAAKgB,YAAYuC,KAAKiO,GACtBsC,GAEA3I,EAAqBjD,EAAOwL,GAA2B,CAAEzE,aAAc,GAAMD,WAAY,GAAOxB,SAAU,GAAMtF,MAAO4L,CAAM,CAAC,CAEtI,CACA,QAAS/O,EAAI,EAAGA,EAAIoF,EAAMnF,QACtB+O,GAAwBZ,EAAShJ,EAAMpF,KAAMoF,EAAMpF,KAAMoF,EAAMpF,KAAMoF,EAAMpF,IAAI,EAEnF,GAAIoF,EAAMnF,QAAU,GAAKpC,GAASoQ,EAAU,CACxCG,EAAQV,GAAeQ,EACvB,IAAIpB,EAAuB3J,EAC3B,GAAI,CAIA,MAAM,IAAInI,MAAM,0BAA4BoR,EAAuBjJ,CAAK,GACnEA,GAASA,EAAM0J,MAAQ;EAAO1J,EAAM0J,MAAQ,GAAG,CACxD,OACOxN,EAAP,CACIyN,EAAuBzN,CAC3B,CACImN,IAGAM,EAAqBE,cAAgB,IAEzCF,EAAqBH,UAAYxJ,EACjC2J,EAAqBsB,QAAUA,EAC/BtB,EAAqBhR,KAAOb,EAAKc,QACjC+Q,EAAqBnP,KAAO1C,EAAKgB,YACjCsQ,EAAuBtJ,KAAK6J,CAAoB,EAChDX,EAAI7M,kBAAiB,CACzB,CACJ,CACJ,CAEA,OAAO8O,CACX,CACA,IAAMa,EAA4BnU,EAAW,yBAAyB,EACtE,SAASgU,GAAqBV,EAAS,CACnC,GAAIA,EAAQV,KAAiBQ,EAAmB,CAM5C,GAAI,CACA,IAAMf,EAAUlS,EAAKgU,GACjB9B,GAAW,OAAOA,GAAY,YAC9BA,EAAQtJ,KAAK,KAAM,CAAE8I,UAAWyB,EAAQT,GAAcS,QAASA,CAAQ,CAAC,CAEhF,MACA,CACA,CACAA,EAAQV,GAAeO,EACvB,QAASjO,EAAI,EAAGA,EAAIuM,EAAuBtM,OAAQD,IAC3CoO,IAAY7B,EAAuBvM,GAAGoO,SACtC7B,EAAuB2C,OAAOlP,EAAG,CAAC,CAG9C,CACJ,CACA,SAASgP,GAAwBZ,EAAStS,EAAMqT,EAAcC,EAAaC,EAAY,CACnFP,GAAqBV,CAAO,EAC5B,IAAMkB,EAAelB,EAAQV,GACvBtN,EAAWkP,EACZ,OAAOF,GAAgB,WAAcA,EAAc9B,EACnD,OAAO+B,GAAe,WAAcA,EACjC9B,EACRzR,EAAKwD,kBAAkBvC,EAAQ,IAAM,CACjC,GAAI,CACA,IAAMwS,EAAqBnB,EAAQT,GAC7B6B,EAAmB,CAAC,CAACL,GAAgBvB,IAAkBuB,EAAavB,GACtE4B,IAEAL,EAAatB,GAA4B0B,EACzCJ,EAAarB,GAA4BwB,GAG7C,IAAMnM,EAAQrH,EAAKsB,IAAIgD,EAAUzB,OAAW6Q,GAAoBpP,IAAamN,GAAoBnN,IAAakN,EAC1G,CAAA,EACA,CAACiC,CAAkB,CAAC,EACxBjB,EAAea,EAAc,GAAMhM,CAAK,CAC5C,OACO3F,EAAP,CAEI8Q,EAAea,EAAc,GAAO3R,CAAK,CAC7C,CACJ,EAAG2R,CAAY,CACnB,CACA,IAAMM,EAA+B,gDAC/BhK,EAAO,UAAY,CAAE,EACrBiK,EAAiBnV,EAAOmV,eAC9B,MAAMlC,CAAiB,CACnB,OAAOnJ,UAAW,CACd,OAAOoL,CACX,CACA,OAAOvK,QAAQ/B,EAAO,CAClB,OAAOmL,EAAe,IAAI,KAAK,IAAI,EAAGN,EAAU7K,CAAK,CACzD,CACA,OAAOsK,OAAOjQ,EAAO,CACjB,OAAO8Q,EAAe,IAAI,KAAK,IAAI,EAAGL,EAAUzQ,CAAK,CACzD,CACA,OAAOmS,IAAIC,EAAQ,CACf,GAAI,CAACA,GAAU,OAAOA,EAAOC,OAAOC,WAAc,WAC9C,OAAOC,QAAQtC,OAAO,IAAIiC,EAAe,CAAA,EAAI,4BAA4B,CAAC,EAE9E,IAAMM,EAAW,CAAA,EACbjQ,EAAQ,EACZ,GAAI,CACA,QAASsO,KAAKuB,EACV7P,IACAiQ,EAAS/M,KAAKuK,EAAiBtI,QAAQmJ,CAAC,CAAC,CAEjD,MACA,CACI,OAAO0B,QAAQtC,OAAO,IAAIiC,EAAe,CAAA,EAAI,4BAA4B,CAAC,CAC9E,CACA,GAAI3P,IAAU,EACV,OAAOgQ,QAAQtC,OAAO,IAAIiC,EAAe,CAAA,EAAI,4BAA4B,CAAC,EAE9E,IAAIO,EAAW,GACTC,EAAS,CAAA,EACf,OAAO,IAAI1C,EAAiB,CAACtI,EAASuI,IAAW,CAC7C,QAASzN,EAAI,EAAGA,EAAIgQ,EAAS/P,OAAQD,IACjCgQ,EAAShQ,GAAGqN,KAAKgB,GAAK,CACd4B,IAGJA,EAAW,GACX/K,EAAQmJ,CAAC,EACb,EAAGhP,GAAO,CACN6Q,EAAOjN,KAAK5D,CAAG,EACfU,IACIA,IAAU,IACVkQ,EAAW,GACXxC,EAAO,IAAIiC,EAAeQ,EAAQ,4BAA4B,CAAC,EAEvE,CAAC,CAET,CAAC,CACL,CAEA,OAAOC,KAAKP,EAAQ,CAChB,IAAI1K,EACAuI,EACAW,EAAU,IAAI,KAAK,CAACgC,EAAKC,IAAQ,CACjCnL,EAAUkL,EACV3C,EAAS4C,CACb,CAAC,EACD,SAASC,EAAUnN,EAAO,CACtB+B,EAAQ/B,CAAK,CACjB,CACA,SAASoN,EAAS/S,EAAO,CACrBiQ,EAAOjQ,CAAK,CAChB,CACA,QAAS2F,KAASyM,EACTxC,EAAWjK,CAAK,IACjBA,EAAQ,KAAK+B,QAAQ/B,CAAK,GAE9BA,EAAMkK,KAAKiD,EAAWC,CAAQ,EAElC,OAAOnC,CACX,CACA,OAAOoC,IAAIZ,EAAQ,CACf,OAAOpC,EAAiBiD,gBAAgBb,CAAM,CAClD,CACA,OAAOc,WAAWd,EAAQ,CAEtB,OADU,MAAQ,KAAKpL,qBAAqBgJ,EAAmB,KAAOA,GAC7DiD,gBAAgBb,EAAQ,CAC7Be,aAAexN,IAAW,CAAEyN,OAAQ,YAAazN,MAAAA,CAAM,GACvD0N,cAAgBxR,IAAS,CAAEuR,OAAQ,WAAYE,OAAQzR,CAAI,EAC/D,CAAC,CACL,CACA,OAAOoR,gBAAgBb,EAAQ9S,EAAU,CACrC,IAAIoI,EACAuI,EACAW,EAAU,IAAI,KAAK,CAACgC,EAAKC,IAAQ,CACjCnL,EAAUkL,EACV3C,EAAS4C,CACb,CAAC,EAEGU,EAAkB,EAClBC,EAAa,EACXC,EAAiB,CAAA,EACvB,QAAS9N,KAASyM,EAAQ,CACjBxC,EAAWjK,CAAK,IACjBA,EAAQ,KAAK+B,QAAQ/B,CAAK,GAE9B,IAAM+N,EAAgBF,EACtB,GAAI,CACA7N,EAAMkK,KAAMlK,GAAU,CAClB8N,EAAeC,GAAiBpU,EAAWA,EAAS6T,aAAaxN,CAAK,EAAIA,EAC1E4N,IACIA,IAAoB,GACpB7L,EAAQ+L,CAAc,CAE9B,EAAI5R,GAAQ,CACHvC,GAIDmU,EAAeC,GAAiBpU,EAAS+T,cAAcxR,CAAG,EAC1D0R,IACIA,IAAoB,GACpB7L,EAAQ+L,CAAc,GAN1BxD,EAAOpO,CAAG,CASlB,CAAC,CACL,OACO8R,EAAP,CACI1D,EAAO0D,CAAO,CAClB,CACAJ,IACAC,GACJ,CAEAD,OAAAA,GAAmB,EACfA,IAAoB,GACpB7L,EAAQ+L,CAAc,EAEnB7C,CACX,CACAlT,YAAYkW,EAAU,CAClB,IAAMhD,EAAU,KAChB,GAAI,EAAEA,aAAmBZ,GACrB,MAAM,IAAIxS,MAAM,gCAAgC,EAEpDoT,EAAQV,GAAeK,EACvBK,EAAQT,GAAe,CAAA,EACvB,GAAI,CACA,IAAMiB,EAAcL,EAAI,EACxB6C,GACIA,EAASxC,EAAYT,EAAaC,EAASJ,CAAQ,CAAC,EAAGY,EAAYT,EAAaC,EAASH,CAAQ,CAAC,CAAC,CAC3G,OACOzQ,EAAP,CACI8Q,EAAeF,EAAS,GAAO5Q,CAAK,CACxC,CACJ,CACA,IAAKqS,OAAOwB,cAAe,CACvB,MAAO,SACX,CACA,IAAKxB,OAAOyB,UAAW,CACnB,OAAO9D,CACX,CACAH,KAAK+B,EAAaC,EAAY,CAC1B,IAAIkC,EASJ,IAAIC,GAAKD,EAAK,KAAKrW,eAAiB,MAAQqW,IAAO,OAAS,OAASA,EAAG1B,OAAOyB,UAC3E,CAACE,GAAK,OAAOA,GAAM,cACnBA,EAAI,KAAKtW,aAAesS,GAE5B,IAAM2B,EAAe,IAAIqC,EAAE/L,CAAI,EACzB3J,EAAOb,EAAKc,QAClB,OAAI,KAAK2R,IAAgBK,EACrB,KAAKJ,GAAa1K,KAAKnH,EAAMqT,EAAcC,EAAaC,CAAU,EAGlEL,GAAwB,KAAMlT,EAAMqT,EAAcC,EAAaC,CAAU,EAEtEF,CACX,CACAsC,MAAMpC,EAAY,CACd,OAAO,KAAKhC,KAAK,KAAMgC,CAAU,CACrC,CACAqC,QAAQC,EAAW,CACf,IAAIJ,EAEJ,IAAIC,GAAKD,EAAK,KAAKrW,eAAiB,MAAQqW,IAAO,OAAS,OAASA,EAAG1B,OAAOyB,UAC3E,CAACE,GAAK,OAAOA,GAAM,cACnBA,EAAIhE,GAER,IAAM2B,EAAe,IAAIqC,EAAE/L,CAAI,EAC/B0J,EAAavB,GAAiBA,EAC9B,IAAM9R,EAAOb,EAAKc,QAClB,OAAI,KAAK2R,IAAgBK,EACrB,KAAKJ,GAAa1K,KAAKnH,EAAMqT,EAAcwC,EAAWA,CAAS,EAG/D3C,GAAwB,KAAMlT,EAAMqT,EAAcwC,EAAWA,CAAS,EAEnExC,CACX,CACJ,CAGA3B,EAAiB,QAAaA,EAAiBtI,QAC/CsI,EAAiB,OAAYA,EAAiBC,OAC9CD,EAAiB,KAAUA,EAAiB2C,KAC5C3C,EAAiB,IAASA,EAAiBgD,IAC3C,IAAMoB,EAAgBrX,EAAOoK,GAAiBpK,EAAO,QACrDA,EAAO,QAAaiT,EACpB,IAAMqE,EAAoB/W,EAAW,aAAa,EAClD,SAASiL,EAAU+L,EAAM,CACrB,IAAM3G,EAAQ2G,EAAKtN,UACbuF,EAAO1D,EAA+B8E,EAAO,MAAM,EACzD,GAAIpB,IAASA,EAAKtB,WAAa,IAAS,CAACsB,EAAKG,cAG1C,OAEJ,IAAM6H,EAAe5G,EAAMkC,KAE3BlC,EAAMvG,GAAcmN,EACpBD,EAAKtN,UAAU6I,KAAO,SAAUiD,EAAWC,EAAU,CAIjD,OAHgB,IAAI/C,EAAiB,CAACtI,EAASuI,IAAW,CACtDsE,EAAalO,KAAK,KAAMqB,EAASuI,CAAM,CAC3C,CAAC,EACcJ,KAAKiD,EAAWC,CAAQ,CAC3C,EACAuB,EAAKD,GAAqB,EAC9B,CACA1F,EAAIpG,UAAYA,EAChB,SAASiM,EAAQ5V,EAAI,CACjB,OAAO,SAAUuH,EAAMG,EAAM,CACzB,IAAImO,EAAgB7V,EAAG2G,MAAMY,EAAMG,CAAI,EACvC,GAAImO,aAAyBzE,EACzB,OAAOyE,EAEX,IAAIC,EAAOD,EAAc/W,YACzB,OAAKgX,EAAKL,IACN9L,EAAUmM,CAAI,EAEXD,CACX,CACJ,CACA,OAAIL,IACA7L,EAAU6L,CAAa,EACvB/L,GAAYtL,EAAQ,QAAS6F,GAAY4R,EAAQ5R,CAAQ,CAAC,GAG9D2P,QAAQ9U,EAAKH,WAAW,uBAAuB,GAAKyR,EAC7CiB,CACX,CAAC,EAWDvS,KAAKkB,aAAa,WAAa5B,GAAW,CAEtC,IAAM4X,EAA2BC,SAAS5N,UAAUH,SAC9CgO,EAA2BvK,EAAW,kBAAkB,EACxDwK,EAAiBxK,EAAW,SAAS,EACrCyK,EAAezK,EAAW,OAAO,EACjC0K,EAAsB,UAAoB,CAC5C,GAAI,OAAO,MAAS,WAAY,CAC5B,IAAMC,EAAmB,KAAKJ,GAC9B,GAAII,EACA,OAAI,OAAOA,GAAqB,WACrBN,EAAyBtO,KAAK4O,CAAgB,EAG9ClO,OAAOC,UAAUH,SAASR,KAAK4O,CAAgB,EAG9D,GAAI,OAAS1C,QAAS,CAClB,IAAM2C,EAAgBnY,EAAO+X,GAC7B,GAAII,EACA,OAAOP,EAAyBtO,KAAK6O,CAAa,CAE1D,CACA,GAAI,OAAS1X,MAAO,CAChB,IAAM2X,EAAcpY,EAAOgY,GAC3B,GAAII,EACA,OAAOR,EAAyBtO,KAAK8O,CAAW,CAExD,CACJ,CACA,OAAOR,EAAyBtO,KAAK,IAAI,CAC7C,EACA2O,EAAoBH,GAA4BF,EAChDC,SAAS5N,UAAUH,SAAWmO,EAE9B,IAAMI,EAAyBrO,OAAOC,UAAUH,SAC1CwO,EAA2B,mBACjCtO,OAAOC,UAAUH,SAAW,UAAY,CACpC,OAAI,OAAO0L,SAAY,YAAc,gBAAgBA,QAC1C8C,EAEJD,EAAuB/O,KAAK,IAAI,CAC3C,CACJ,CAAC,EASD,IAAIiP,GAAmB,GACvB,GAAI,OAAOhM,OAAW,IAClB,GAAI,CACA,IAAMrD,EAAUc,OAAOyC,eAAe,CAAC,EAAG,UAAW,CACjDvK,IAAK,UAAY,CACbqW,GAAmB,EACvB,CACJ,CAAC,EAIDhM,OAAO2D,iBAAiB,OAAQhH,EAASA,CAAO,EAChDqD,OAAO0D,oBAAoB,OAAQ/G,EAASA,CAAO,CACvD,MACA,CACIqP,GAAmB,EACvB,CAGJ,IAAMC,GAAiC,CACnCnP,KAAM,EACV,EACMoP,GAAuB,CAAC,EACxBC,GAAgB,CAAC,EACjBC,GAAyB,IAAIC,OAAO,IAAMvL,GAAqB,qBAAqB,EACpFwL,GAA+BtL,EAAW,oBAAoB,EACpE,SAASuL,GAAkB/I,EAAWgJ,EAAmB,CACrD,IAAMC,GAAkBD,EAAoBA,EAAkBhJ,CAAS,EAAIA,GAAa3C,GAClF6L,GAAiBF,EAAoBA,EAAkBhJ,CAAS,EAAIA,GAAa5C,GACjFnC,EAASqC,GAAqB2L,EAC9BE,EAAgB7L,GAAqB4L,EAC3CR,GAAqB1I,GAAa,CAAC,EACnC0I,GAAqB1I,GAAW3C,IAAapC,EAC7CyN,GAAqB1I,GAAW5C,IAAY+L,CAChD,CACA,SAAS9N,GAAiBsC,EAASkE,EAAKuH,EAAMC,EAAc,CACxD,IAAMC,EAAsBD,GAAgBA,EAAaE,KAAQvM,GAC3DwM,EAAyBH,GAAgBA,EAAaI,IAAOxM,GAC7DyM,EAA4BL,GAAgBA,EAAaM,WAAc,iBACvEC,EAAuCP,GAAgBA,EAAaQ,OAAU,qBAC9EC,EAA6BtM,EAAW8L,CAAkB,EAC1DS,EAA4B,IAAMT,EAAqB,IACvDU,EAAyB,kBACzBC,EAAgC,IAAMD,EAAyB,IAC/D1V,EAAa,SAAUjB,EAAM2C,EAAQ6I,EAAO,CAG9C,GAAIxL,EAAK6W,UACL,OAEJ,IAAMpU,EAAWzC,EAAKb,SAClB,OAAOsD,GAAa,UAAYA,EAASqU,cAEzC9W,EAAKb,SAAYqM,GAAU/I,EAASqU,YAAYtL,CAAK,EACrDxL,EAAK8U,iBAAmBrS,GAM5B,IAAI5C,EACJ,GAAI,CACAG,EAAKJ,OAAOI,EAAM2C,EAAQ,CAAC6I,CAAK,CAAC,CACrC,OACO9J,EAAP,CACI7B,EAAQ6B,CACZ,CACA,IAAMoE,EAAU9F,EAAK8F,QACrB,GAAIA,GAAW,OAAOA,GAAY,UAAYA,EAAQ8K,KAAM,CAIxD,IAAMnO,EAAWzC,EAAK8U,iBAAmB9U,EAAK8U,iBAAmB9U,EAAKb,SACtEwD,EAAOwT,GAAuBjQ,KAAKvD,EAAQ6I,EAAMpL,KAAMqC,EAAUqD,CAAO,CAC5E,CACA,OAAOjG,CACX,EACA,SAASkX,EAAeC,EAASxL,EAAOyL,EAAW,CAI/C,GADAzL,EAAQA,GAASlB,EAAQkB,MACrB,CAACA,EACD,OAIJ,IAAM7I,EAASqU,GAAWxL,EAAM7I,QAAU2H,EACpC4M,EAAQvU,EAAO0S,GAAqB7J,EAAMpL,MAAM6W,EAAYlN,GAAWC,KAC7E,GAAIkN,EAAO,CACP,IAAM3E,EAAS,CAAA,EAGf,GAAI2E,EAAM5U,SAAW,EAAG,CACpB,IAAMZ,EAAMT,EAAWiW,EAAM,GAAIvU,EAAQ6I,CAAK,EAC9C9J,GAAO6Q,EAAOjN,KAAK5D,CAAG,CAC1B,KACK,CAID,IAAMyV,EAAYD,EAAMxN,MAAK,EAC7B,QAASrH,EAAI,EAAGA,EAAI8U,EAAU7U,QACtBkJ,EAAAA,GAASA,EAAMiK,MAAkC,IADnBpT,IAAK,CAIvC,IAAMX,EAAMT,EAAWkW,EAAU9U,GAAIM,EAAQ6I,CAAK,EAClD9J,GAAO6Q,EAAOjN,KAAK5D,CAAG,CAC1B,CACJ,CAGA,GAAI6Q,EAAOjQ,SAAW,EAClB,MAAMiQ,EAAO,GAGb,QAASlQ,EAAI,EAAGA,EAAIkQ,EAAOjQ,OAAQD,IAAK,CACpC,IAAMX,EAAM6Q,EAAOlQ,GACnBmM,EAAInH,wBAAwB,IAAM,CAC9B,MAAM3F,CACV,CAAC,CACL,CAER,CACJ,CAEA,IAAM0V,EAA0B,SAAU5L,EAAO,CAC7C,OAAOuL,EAAe,KAAMvL,EAAO,EAAK,CAC5C,EAEM6L,EAAiC,SAAU7L,EAAO,CACpD,OAAOuL,EAAe,KAAMvL,EAAO,EAAI,CAC3C,EACA,SAAS8L,EAAwBnL,EAAK6J,EAAc,CAChD,GAAI,CAAC7J,EACD,MAAO,GAEX,IAAIoL,EAAoB,GACpBvB,GAAgBA,EAAa/P,OAASjF,SACtCuW,EAAoBvB,EAAa/P,MAErC,IAAMuR,EAAkBxB,GAAgBA,EAAayB,GACjDra,EAAiB,GACjB4Y,GAAgBA,EAAa0B,SAAW1W,SACxC5D,EAAiB4Y,EAAa0B,QAElC,IAAIC,EAAe,GACf3B,GAAgBA,EAAa4B,KAAO5W,SACpC2W,EAAe3B,EAAa4B,IAEhC,IAAIpK,EAAQrB,EACZ,KAAOqB,GAAS,CAACA,EAAM7O,eAAesX,CAAkB,GACpDzI,EAAQlE,GAAqBkE,CAAK,EAStC,GAPI,CAACA,GAASrB,EAAI8J,KAEdzI,EAAQrB,GAER,CAACqB,GAGDA,EAAMiJ,GACN,MAAO,GAEX,IAAMd,EAAoBK,GAAgBA,EAAaL,kBAGjDkC,EAAW,CAAC,EACZC,EAAyBtK,EAAMiJ,GAA8BjJ,EAAMyI,GACnE8B,EAA4BvK,EAAMrD,EAAWgM,CAAqB,GACpE3I,EAAM2I,GACJ6B,EAAkBxK,EAAMrD,EAAWkM,CAAwB,GAC7D7I,EAAM6I,GACJ4B,GAA2BzK,EAAMrD,EAAWoM,CAAmC,GACjF/I,EAAM+I,GACN2B,EACAlC,GAAgBA,EAAamC,UAC7BD,EAA6B1K,EAAMrD,EAAW6L,EAAamC,OAAO,GAC9D3K,EAAMwI,EAAamC,UAM3B,SAASC,EAA0BtS,EAASuS,EAAS,CACjD,MAAI,CAAClD,IAAoB,OAAOrP,GAAY,UAAYA,EAI7C,CAAC,CAACA,EAAQwS,QAEjB,CAACnD,IAAoB,CAACkD,EACfvS,EAEP,OAAOA,GAAY,UACZ,CAAEwS,QAASxS,EAASuS,QAAS,EAAK,EAExCvS,EAGD,OAAOA,GAAY,UAAYA,EAAQuS,UAAY,GAC5CzR,OAAO2R,OAAO3R,OAAO2R,OAAO,CAAC,EAAGzS,CAAO,EAAG,CAAEuS,QAAS,EAAK,CAAC,EAE/DvS,EALI,CAAEuS,QAAS,EAAK,CAM/B,CACA,IAAMG,GAAuB,SAAUxY,EAAM,CAGzC,GAAI6X,CAAAA,EAASY,WAGb,OAAOX,EAAuB5R,KAAK2R,EAASlV,OAAQkV,EAASlL,UAAWkL,EAASS,QAAUjB,EAAiCD,EAAyBS,EAAS/R,OAAO,CACzK,EACM4S,GAAqB,SAAU1Y,EAAM,CAIvC,GAAI,CAACA,EAAK6W,UAAW,CACjB,IAAM8B,EAAmBtD,GAAqBrV,EAAK2M,WAC/CiM,EACAD,IACAC,EAAkBD,EAAiB3Y,EAAKsY,QAAUvO,GAAWC,KAEjE,IAAM6O,EAAgBD,GAAmB5Y,EAAK2C,OAAOiW,GACrD,GAAIC,GACA,QAASxW,EAAI,EAAGA,EAAIwW,EAAcvW,OAAQD,IAEtC,GADqBwW,EAAcxW,KACdrC,EAAM,CACvB6Y,EAActH,OAAOlP,EAAG,CAAC,EAEzBrC,EAAK6W,UAAY,GACbgC,EAAcvW,SAAW,IAGzBtC,EAAK8Y,WAAa,GAClB9Y,EAAK2C,OAAOiW,GAAmB,MAEnC,KACJ,EAGZ,CAIA,GAAI,EAAC5Y,EAAK8Y,WAGV,OAAOf,EAA0B7R,KAAKlG,EAAK2C,OAAQ3C,EAAK2M,UAAW3M,EAAKsY,QAAUjB,EAAiCD,EAAyBpX,EAAK8F,OAAO,CAC5J,EACMiT,EAA0B,SAAU/Y,EAAM,CAC5C,OAAO8X,EAAuB5R,KAAK2R,EAASlV,OAAQkV,EAASlL,UAAW3M,EAAKJ,OAAQiY,EAAS/R,OAAO,CACzG,EACMkT,EAAwB,SAAUhZ,EAAM,CAC1C,OAAOkY,EAA2BhS,KAAK2R,EAASlV,OAAQkV,EAASlL,UAAW3M,EAAKJ,OAAQiY,EAAS/R,OAAO,CAC7G,EACMmT,EAAwB,SAAUjZ,EAAM,CAC1C,OAAO+X,EAA0B7R,KAAKlG,EAAK2C,OAAQ3C,EAAK2M,UAAW3M,EAAKJ,OAAQI,EAAK8F,OAAO,CAChG,EACMlE,EAAiB2V,EAAoBiB,GAAuBO,EAC5D/W,EAAeuV,EAAoBmB,GAAqBO,EACxDC,EAAgC,SAAUlZ,EAAMyC,EAAU,CAC5D,IAAM0W,EAAiB,OAAO1W,EAC9B,OAAQ0W,IAAmB,YAAcnZ,EAAKb,WAAasD,GACtD0W,IAAmB,UAAYnZ,EAAK8U,mBAAqBrS,CAClE,EACM2W,EAAWpD,GAAgBA,EAAaqD,KAAQrD,EAAaqD,KAAOH,EACpEI,EAAkBhc,KAAK6M,EAAW,kBAAkB,GACpDoP,EAAgBjP,EAAQH,EAAW,gBAAgB,GACnDqP,EAAkB,SAAUC,EAAgBC,EAAWC,EAAkBC,EAAgBjC,EAAe,GAAOQ,EAAU,GAAO,CAClI,OAAO,UAAY,CACf,IAAMxV,EAAS,MAAQ2H,EACnBqC,EAAYnN,UAAU,GACtBwW,GAAgBA,EAAa6D,oBAC7BlN,EAAYqJ,EAAa6D,kBAAkBlN,CAAS,GAExD,IAAIlK,EAAWjD,UAAU,GACzB,GAAI,CAACiD,EACD,OAAOgX,EAAerU,MAAM,KAAM5F,SAAS,EAE/C,GAAI0L,IAAUyB,IAAc,oBAExB,OAAO8M,EAAerU,MAAM,KAAM5F,SAAS,EAK/C,IAAIsa,EAAgB,GACpB,GAAI,OAAOrX,GAAa,WAAY,CAChC,GAAI,CAACA,EAASqU,YACV,OAAO2C,EAAerU,MAAM,KAAM5F,SAAS,EAE/Csa,EAAgB,EACpB,CACA,GAAItC,GAAmB,CAACA,EAAgBiC,EAAgBhX,EAAUE,EAAQnD,SAAS,EAC/E,OAEJ,IAAM6Y,GAAUlD,IAAoB,CAAC,CAACoE,GAAiBA,EAAchL,QAAQ5B,CAAS,IAAM,GACtF7G,GAAUsS,EAA0B5Y,UAAU,GAAI6Y,EAAO,EAC/D,GAAIiB,GAEA,QAASjX,GAAI,EAAGA,GAAIiX,EAAgBhX,OAAQD,KACxC,GAAIsK,IAAc2M,EAAgBjX,IAC9B,OAAIgW,GACOoB,EAAevT,KAAKvD,EAAQgK,EAAWlK,EAAUqD,EAAO,EAGxD2T,EAAerU,MAAM,KAAM5F,SAAS,EAK3D,IAAM8Y,GAAWxS,GAAkB,OAAOA,IAAY,UAAY,GAAOA,GAAQwS,QAAtD,GACrB1H,GAAO9K,IAAW,OAAOA,IAAY,SAAWA,GAAQ8K,KAAO,GAC/DzS,GAAOb,KAAKc,QACdua,GAAmBtD,GAAqB1I,GACvCgM,KACDjD,GAAkB/I,EAAWgJ,CAAiB,EAC9CgD,GAAmBtD,GAAqB1I,IAE5C,IAAMiM,GAAkBD,GAAiBL,GAAUvO,GAAWC,IAC1D6O,GAAgBlW,EAAOiW,IACvBH,GAAa,GACjB,GAAII,IAGA,GADAJ,GAAa,GACTrb,GACA,QAASiF,GAAI,EAAGA,GAAIwW,GAAcvW,OAAQD,KACtC,GAAI+W,EAAQP,GAAcxW,IAAII,CAAQ,EAElC,aAMZoW,GAAgBlW,EAAOiW,IAAmB,CAAA,EAE9C,IAAIxZ,GACE2a,GAAkBpX,EAAOpF,YAAY,KACrCyc,GAAe1E,GAAcyE,IAC/BC,KACA5a,GAAS4a,GAAarN,IAErBvN,KACDA,GAAS2a,GAAkBL,GACtB/D,EAAoBA,EAAkBhJ,CAAS,EAAIA,IAI5DkL,EAAS/R,QAAUA,GACf8K,KAIAiH,EAAS/R,QAAQ8K,KAAO,IAE5BiH,EAASlV,OAASA,EAClBkV,EAASS,QAAUA,GACnBT,EAASlL,UAAYA,EACrBkL,EAASY,WAAaA,GACtB,IAAM5X,GAAO0W,EAAoBnC,GAAiCpU,OAE9DH,KACAA,GAAKgX,SAAWA,GAEpB,IAAM7X,GAAO7B,GAAK8D,kBAAkB7C,GAAQqD,EAAU5B,GAAM8Y,EAAkBC,CAAc,EA+B5F,GA5BA/B,EAASlV,OAAS,KAEd9B,KACAA,GAAKgX,SAAW,MAIhBjH,KACA9K,GAAQ8K,KAAO,IAEb,CAACuE,IAAoB,OAAOnV,GAAK8F,SAAY,YAG/C9F,GAAK8F,QAAUA,IAEnB9F,GAAK2C,OAASA,EACd3C,GAAKsY,QAAUA,GACftY,GAAK2M,UAAYA,EACbmN,IAEA9Z,GAAK8U,iBAAmBrS,GAEvB0V,EAIDU,GAAcoB,QAAQja,EAAI,EAH1B6Y,GAAcvT,KAAKtF,EAAI,EAKvB2X,EACA,OAAOhV,CAEf,CACJ,EACA6K,OAAAA,EAAMyI,GAAsBuD,EAAgB1B,EAAwBpB,EAA2B9U,EAAgBI,EAAc2V,CAAY,EACrIO,IACA1K,EAAMmJ,GAA0B6C,EAAgBtB,EAA4BtB,EAA+BoC,EAAuBhX,EAAc2V,EAAc,EAAI,GAEtKnK,EAAM2I,GAAyB,UAAY,CACvC,IAAMxT,EAAS,MAAQ2H,EACnBqC,EAAYnN,UAAU,GACtBwW,GAAgBA,EAAa6D,oBAC7BlN,EAAYqJ,EAAa6D,kBAAkBlN,CAAS,GAExD,IAAM7G,EAAUtG,UAAU,GACpB8Y,EAAWxS,EAAkB,OAAOA,GAAY,UAAY,GAAOA,EAAQwS,QAAtD,GACrB7V,EAAWjD,UAAU,GAC3B,GAAI,CAACiD,EACD,OAAOsV,EAA0B3S,MAAM,KAAM5F,SAAS,EAE1D,GAAIgY,GACA,CAACA,EAAgBO,EAA2BtV,EAAUE,EAAQnD,SAAS,EACvE,OAEJ,IAAMmZ,EAAmBtD,GAAqB1I,GAC1CiM,EACAD,IACAC,EAAkBD,EAAiBL,EAAUvO,GAAWC,KAE5D,IAAM6O,EAAgBD,GAAmBjW,EAAOiW,GAChD,GAAIC,EACA,QAASxW,EAAI,EAAGA,EAAIwW,EAAcvW,OAAQD,IAAK,CAC3C,IAAM6X,EAAerB,EAAcxW,GACnC,GAAI+W,EAAQc,EAAczX,CAAQ,EAAG,CAIjC,GAHAoW,EAActH,OAAOlP,EAAG,CAAC,EAEzB6X,EAAarD,UAAY,GACrBgC,EAAcvW,SAAW,IAGzB4X,EAAapB,WAAa,GAC1BnW,EAAOiW,GAAmB,KAItB,OAAOjM,GAAc,UAAU,CAC/B,IAAMwN,GAAmBlQ,GAAqB,cAAgB0C,EAC9DhK,EAAOwX,IAAoB,IAC/B,CAGJ,OADAD,EAAa/b,KAAK+D,WAAWgY,CAAY,EACrCvC,EACOhV,EAEX,MACJ,CACJ,CAMJ,OAAOoV,EAA0B3S,MAAM,KAAM5F,SAAS,CAC1D,EACAgO,EAAM6I,GAA4B,UAAY,CAC1C,IAAM1T,EAAS,MAAQ2H,EACnBqC,EAAYnN,UAAU,GACtBwW,GAAgBA,EAAa6D,oBAC7BlN,EAAYqJ,EAAa6D,kBAAkBlN,CAAS,GAExD,IAAM2J,EAAY,CAAA,EACZY,EAAQkD,GAAezX,EAAQgT,EAAoBA,EAAkBhJ,CAAS,EAAIA,CAAS,EACjG,QAAStK,EAAI,EAAGA,EAAI6U,EAAM5U,OAAQD,IAAK,CACnC,IAAMrC,EAAOkX,EAAM7U,GACfI,EAAWzC,EAAK8U,iBAAmB9U,EAAK8U,iBAAmB9U,EAAKb,SACpEmX,EAAUhR,KAAK7C,CAAQ,CAC3B,CACA,OAAO6T,CACX,EACA9I,EAAM+I,GAAuC,UAAY,CACrD,IAAM5T,EAAS,MAAQ2H,EACnBqC,EAAYnN,UAAU,GAC1B,GAAKmN,EAiBA,CACGqJ,GAAgBA,EAAa6D,oBAC7BlN,EAAYqJ,EAAa6D,kBAAkBlN,CAAS,GAExD,IAAMgM,EAAmBtD,GAAqB1I,GAC9C,GAAIgM,EAAkB,CAClB,IAAMC,EAAkBD,EAAiB3O,IACnCqQ,EAAyB1B,EAAiB5O,IAC1CmN,EAAQvU,EAAOiW,GACf0B,EAAe3X,EAAO0X,GAC5B,GAAInD,EAAO,CACP,IAAMqD,EAAcrD,EAAMxN,MAAK,EAC/B,QAASrH,EAAI,EAAGA,EAAIkY,EAAYjY,OAAQD,IAAK,CACzC,IAAMrC,EAAOua,EAAYlY,GACrBI,GAAWzC,EAAK8U,iBAAmB9U,EAAK8U,iBAAmB9U,EAAKb,SACpE,KAAKgX,GAAuBjQ,KAAK,KAAMyG,EAAWlK,GAAUzC,EAAK8F,OAAO,CAC5E,CACJ,CACA,GAAIwU,EAAc,CACd,IAAMC,EAAcD,EAAa5Q,MAAK,EACtC,QAASrH,EAAI,EAAGA,EAAIkY,EAAYjY,OAAQD,IAAK,CACzC,IAAMrC,EAAOua,EAAYlY,GACrBI,GAAWzC,EAAK8U,iBAAmB9U,EAAK8U,iBAAmB9U,EAAKb,SACpE,KAAKgX,GAAuBjQ,KAAK,KAAMyG,EAAWlK,GAAUzC,EAAK8F,OAAO,CAC5E,CACJ,CACJ,CACJ,KA5CgB,CACZ,IAAM0U,EAAO5T,OAAO4T,KAAK7X,CAAM,EAC/B,QAASN,EAAI,EAAGA,EAAImY,EAAKlY,OAAQD,IAAK,CAClC,IAAM+J,EAAOoO,EAAKnY,GACZoY,EAAQlF,GAAuBmF,KAAKtO,CAAI,EAC1CuO,EAAUF,GAASA,EAAM,GAKzBE,GAAWA,IAAY,kBACvB,KAAKpE,GAAqCrQ,KAAK,KAAMyU,CAAO,CAEpE,CAEA,KAAKpE,GAAqCrQ,KAAK,KAAM,gBAAgB,CACzE,CA6BA,GAAIyR,EACA,OAAO,IAEf,EAEA3O,GAAsBwE,EAAMyI,GAAqB6B,CAAsB,EACvE9O,GAAsBwE,EAAM2I,GAAwB4B,CAAyB,EACzEE,IACAjP,GAAsBwE,EAAM+I,GAAsC0B,EAAwB,EAE1FD,GACAhP,GAAsBwE,EAAM6I,GAA2B2B,CAAe,EAEnE,EACX,CACA,IAAI4C,EAAU,CAAA,EACd,QAASvY,EAAI,EAAGA,EAAI0T,EAAKzT,OAAQD,IAC7BuY,EAAQvY,GAAKiV,EAAwBvB,EAAK1T,GAAI2T,CAAY,EAE9D,OAAO4E,CACX,CACA,SAASR,GAAezX,EAAQgK,EAAW,CACvC,GAAI,CAACA,EAAW,CACZ,IAAMkO,EAAa,CAAA,EACnB,QAASzO,KAAQzJ,EAAQ,CACrB,IAAM8X,EAAQlF,GAAuBmF,KAAKtO,CAAI,EAC1CuO,EAAUF,GAASA,EAAM,GAC7B,GAAIE,IAAY,CAAChO,GAAagO,IAAYhO,GAAY,CAClD,IAAMuK,EAAQvU,EAAOyJ,GACrB,GAAI8K,EACA,QAAS7U,EAAI,EAAGA,EAAI6U,EAAM5U,OAAQD,IAC9BwY,EAAWvV,KAAK4R,EAAM7U,EAAE,CAGpC,CACJ,CACA,OAAOwY,CACX,CACA,IAAIjC,EAAkBvD,GAAqB1I,GACtCiM,IACDlD,GAAkB/I,CAAS,EAC3BiM,EAAkBvD,GAAqB1I,IAE3C,IAAMmO,EAAoBnY,EAAOiW,EAAgB5O,KAC3C+Q,EAAmBpY,EAAOiW,EAAgB7O,KAChD,OAAK+Q,EAIMC,EAAmBD,EAAkBE,OAAOD,CAAgB,EAC/DD,EAAkBpR,MAAK,EAJpBqR,EAAmBA,EAAiBrR,MAAK,EAAK,CAAA,CAM7D,CACA,SAASpB,GAAoB1L,EAAQ4R,EAAK,CACtC,IAAMyM,EAAQre,EAAO,MACjBqe,GAASA,EAAMpU,WACf2H,EAAItG,YAAY+S,EAAMpU,UAAW,2BAA6BpE,GAAa,SAAUuD,EAAMG,EAAM,CAC7FH,EAAKyP,IAAgC,GAIrChT,GAAYA,EAAS2C,MAAMY,EAAMG,CAAI,CACzC,CAAC,CAET,CASA,SAAS+C,GAAesF,EAAK7L,EAAQuY,EAAYC,EAAQC,EAAW,CAChE,IAAMxT,EAAStK,KAAKH,WAAWge,CAAM,EACrC,GAAIxY,EAAOiF,GACP,OAEJ,IAAMyT,EAAiB1Y,EAAOiF,GAAUjF,EAAOwY,GAC/CxY,EAAOwY,GAAU,SAAUpe,EAAMue,EAAMxV,EAAS,CAC5C,OAAIwV,GAAQA,EAAKzU,WACbuU,EAAUG,QAAQ,SAAUpc,EAAU,CAClC,IAAMC,EAAU,GAAE8b,KAAcC,MAAahc,EACvC0H,EAAYyU,EAAKzU,UASvB,GAAI,CACA,GAAIA,EAAUlI,eAAeQ,CAAQ,EAAG,CACpC,IAAMqc,EAAahN,EAAI9F,+BAA+B7B,EAAW1H,CAAQ,EACrEqc,GAAcA,EAAWhW,OACzBgW,EAAWhW,MAAQgJ,EAAI1F,oBAAoB0S,EAAWhW,MAAOpG,CAAM,EACnEoP,EAAIvF,kBAAkBqS,EAAKzU,UAAW1H,EAAUqc,CAAU,GAErD3U,EAAU1H,KACf0H,EAAU1H,GAAYqP,EAAI1F,oBAAoBjC,EAAU1H,GAAWC,CAAM,EAEjF,MACSyH,EAAU1H,KACf0H,EAAU1H,GAAYqP,EAAI1F,oBAAoBjC,EAAU1H,GAAWC,CAAM,EAEjF,MACA,CAEI,CAER,CAAC,EAEEic,EAAenV,KAAKvD,EAAQ5F,EAAMue,EAAMxV,CAAO,CAC1D,EACA0I,EAAIxF,sBAAsBrG,EAAOwY,GAASE,CAAc,CAC5D,CASA,SAAStS,GAAiBpG,EAAQqK,EAAcyO,EAAkB,CAC9D,GAAI,CAACA,GAAoBA,EAAiBnZ,SAAW,EACjD,OAAO0K,EAEX,IAAM0O,EAAMD,EAAiBE,OAAOC,GAAMA,EAAGjZ,SAAWA,CAAM,EAC9D,GAAI,CAAC+Y,GAAOA,EAAIpZ,SAAW,EACvB,OAAO0K,EAEX,IAAM6O,EAAyBH,EAAI,GAAGD,iBACtC,OAAOzO,EAAa2O,OAAOG,GAAMD,EAAuBtN,QAAQuN,CAAE,IAAM,EAAE,CAC9E,CACA,SAASC,GAAwBpZ,EAAQqK,EAAcyO,EAAkB5U,EAAW,CAGhF,GAAI,CAAClE,EACD,OAEJ,IAAMqZ,EAAqBjT,GAAiBpG,EAAQqK,EAAcyO,CAAgB,EAClFxT,GAAkBtF,EAAQqZ,EAAoBnV,CAAS,CAC3D,CAKA,SAASoV,GAAgBtZ,EAAQ,CAC7B,OAAOiE,OAAOsV,oBAAoBvZ,CAAM,EACnCgZ,OAAO5e,GAAQA,EAAKof,WAAW,IAAI,GAAKpf,EAAKuF,OAAS,CAAC,EACvD8Z,IAAIrf,GAAQA,EAAKsf,UAAU,CAAC,CAAC,CACtC,CACA,SAASC,GAAwB9N,EAAKlE,EAAS,CAI3C,GAHIY,IAAU,CAACG,IAGX/N,KAAKkR,EAAI5G,OAAO,aAAa,GAE7B,OAEJ,IAAM6T,EAAmBnR,EAAQ,4BAE7BiS,EAAe,CAAA,EACnB,GAAInR,GAAW,CACX,IAAMf,EAAiBlB,OACvBoT,EAAeA,EAAavB,OAAO,CAC/B,WAAY,aAAc,UAAW,cAAe,kBAAmB,mBACvE,sBAAuB,mBAAoB,oBAAqB,qBAAsB,QAAQ,CACjG,EACD,IAAMwB,EAAwBrO,GAAI,EAAK,CAAC,CAAExL,OAAQ0H,EAAgBoR,iBAAkB,CAAC,OAAO,CAAE,CAAC,EAAI,CAAA,EAGnGM,GAAwB1R,EAAgB4R,GAAgB5R,CAAc,EAAGoR,GAAmBA,EAAiBT,OAAOwB,CAAqB,EAAsBlT,GAAqBe,CAAc,CAAC,CACvM,CACAkS,EAAeA,EAAavB,OAAO,CAC/B,iBAAkB,4BAA6B,WAAY,aAAc,mBACzE,cAAe,iBAAkB,YAAa,WAAW,CAC5D,EACD,QAAS3Y,EAAI,EAAGA,EAAIka,EAAaja,OAAQD,IAAK,CAC1C,IAAMM,EAAS2H,EAAQiS,EAAala,IACpCM,GAAUA,EAAOkE,WACbkV,GAAwBpZ,EAAOkE,UAAWoV,GAAgBtZ,EAAOkE,SAAS,EAAG4U,CAAgB,CACrG,CACJ,CASAne,KAAKkB,aAAa,OAAQ,CAAC5B,EAAQU,EAAMkR,IAAQ,CAG7C,IAAMiO,EAAaR,GAAgBrf,CAAM,EACzC4R,EAAIvG,kBAAoBA,GACxBuG,EAAItG,YAAcA,GAClBsG,EAAIrG,cAAgBA,GACpBqG,EAAInG,eAAiBA,GAOrB,IAAMqU,EAA6Bpf,EAAKH,WAAW,qBAAqB,EAClEwf,EAA0Brf,EAAKH,WAAW,kBAAkB,EAC9DP,EAAO+f,KACP/f,EAAO8f,GAA8B9f,EAAO+f,IAE5C/f,EAAO8f,KACPpf,EAAKof,GAA8Bpf,EAAKqf,GACpC/f,EAAO8f,IAEflO,EAAIlG,oBAAsBA,GAC1BkG,EAAIxG,iBAAmBA,GACvBwG,EAAIjG,WAAaA,GACjBiG,EAAI/F,qBAAuBA,GAC3B+F,EAAI9F,+BAAiCA,GACrC8F,EAAI7F,aAAeA,GACnB6F,EAAI5F,WAAaA,GACjB4F,EAAI3F,WAAaA,GACjB2F,EAAI1F,oBAAsBA,GAC1B0F,EAAIzF,iBAAmBA,GACvByF,EAAIxF,sBAAwBA,GAC5BwF,EAAIvF,kBAAoBrC,OAAOyC,eAC/BmF,EAAItF,eAAiBA,GACrBsF,EAAIhG,iBAAmB,KAAO,CAC1B8M,cAAAA,GACAD,qBAAAA,GACAoH,WAAAA,EACArR,UAAAA,GACAC,MAAAA,GACAH,OAAAA,GACAnB,SAAAA,GACAC,UAAAA,GACAC,mBAAAA,GACAN,uBAAAA,GACAC,0BAAAA,EACJ,EACJ,CAAC,EASD,IAAMgT,GAAazS,EAAW,UAAU,EACxC,SAAS0S,GAAW1T,EAAQ2T,EAASC,EAAYC,EAAY,CACzD,IAAInP,EAAY,KACZoP,EAAc,KAClBH,GAAWE,EACXD,GAAcC,EACd,IAAME,EAAkB,CAAC,EACzB,SAAS9b,EAAapB,EAAM,CACxB,IAAMa,EAAOb,EAAKa,KAClBA,OAAAA,EAAKsF,KAAK,GAAK,UAAY,CACvB,OAAOnG,EAAKJ,OAAOwF,MAAM,KAAM5F,SAAS,CAC5C,EACAqB,EAAK8F,SAAWkH,EAAUzI,MAAM+D,EAAQtI,EAAKsF,IAAI,EAC1CnG,CACX,CACA,SAASmd,EAAUnd,EAAM,CACrB,OAAOid,EAAY/W,KAAKiD,EAAQnJ,EAAKa,KAAK8F,QAAQ,CACtD,CACAkH,EACI3F,GAAYiB,EAAQ2T,EAAUra,GAAa,SAAUuD,EAAMG,EAAM,CAC7D,GAAI,OAAOA,EAAK,IAAO,WAAY,CAC/B,IAAML,EAAU,CACZhF,WAAYkc,IAAe,WAC3BI,MAAQJ,IAAe,WAAaA,IAAe,WAAc7W,EAAK,IAAM,EACxEnF,OACJmF,KAAMA,CACV,EACMhH,EAAWgH,EAAK,GACtBA,EAAK,GAAK,UAAiB,CACvB,GAAI,CACA,OAAOhH,EAASiG,MAAM,KAAM5F,SAAS,CACzC,QAAC,CASSsG,EAAQhF,aACN,OAAOgF,EAAQa,UAAa,SAG5B,OAAOuW,EAAgBpX,EAAQa,UAE1Bb,EAAQa,WAGbb,EAAQa,SAASiW,IAAc,MAG3C,CACJ,EACA,IAAM5c,EAAOkK,GAAiC4S,EAAS3W,EAAK,GAAIL,EAAS1E,EAAc+b,CAAS,EAChG,GAAI,CAACnd,EACD,OAAOA,EAGX,IAAMqd,EAASrd,EAAKa,KAAK8F,SAkBzB,OAjBI,OAAO0W,GAAW,SAGlBH,EAAgBG,GAAUrd,EAErBqd,IAGLA,EAAOT,IAAc5c,GAIrBqd,GAAUA,EAAOC,KAAOD,EAAOE,OAAS,OAAOF,EAAOC,KAAQ,YAC9D,OAAOD,EAAOE,OAAU,aACxBvd,EAAKsd,IAAMD,EAAOC,IAAIE,KAAKH,CAAM,EACjCrd,EAAKud,MAAQF,EAAOE,MAAMC,KAAKH,CAAM,GAErC,OAAOA,GAAW,UAAYA,EACvBA,EAEJrd,CACX,KAGI,QAAOyC,EAAS2C,MAAM+D,EAAQhD,CAAI,CAE1C,CAAC,EACL8W,EACI/U,GAAYiB,EAAQ4T,EAAata,GAAa,SAAUuD,EAAMG,EAAM,CAChE,IAAMsX,EAAKtX,EAAK,GACZnG,EACA,OAAOyd,GAAO,SAEdzd,EAAOkd,EAAgBO,IAIvBzd,EAAOyd,GAAMA,EAAGb,IAEX5c,IACDA,EAAOyd,IAGXzd,GAAQ,OAAOA,EAAKI,MAAS,SACzBJ,EAAKE,QAAU,iBACdF,EAAKe,UAAYf,EAAKa,KAAKC,YAAcd,EAAKW,WAAa,KACxD,OAAO8c,GAAO,SACd,OAAOP,EAAgBO,GAElBA,IACLA,EAAGb,IAAc,MAGrB5c,EAAK7B,KAAK+D,WAAWlC,CAAI,GAK7ByC,EAAS2C,MAAM+D,EAAQhD,CAAI,CAEnC,CAAC,CACT,CASA,SAASuX,GAAoBpT,EAASkE,EAAK,CACvC,GAAM,CAAEpD,UAAAA,EAAWC,MAAAA,CAAM,EAAImD,EAAIhG,iBAAgB,EACjD,GAAK,CAAC4C,GAAa,CAACC,GAAU,CAACf,EAAQ,gBAAqB,EAAE,mBAAoBA,GAC9E,OAEJ,IAAM8Q,EAAY,CAAC,oBAAqB,uBAAwB,kBAAmB,0BAA0B,EAC7G5M,EAAItF,eAAesF,EAAKlE,EAAQqT,eAAgB,iBAAkB,SAAUvC,CAAS,CACzF,CASA,SAASwC,GAAiBtT,EAASkE,EAAK,CACpC,GAAIlR,KAAKkR,EAAI5G,OAAO,kBAAkB,GAElC,OAEJ,GAAM,CAAE6U,WAAAA,EAAYpH,qBAAAA,EAAsBtL,SAAAA,EAAUC,UAAAA,EAAWC,mBAAAA,CAAmB,EAAIuE,EAAIhG,iBAAgB,EAE1G,QAASnG,EAAI,EAAGA,EAAIoa,EAAWna,OAAQD,IAAK,CACxC,IAAMsK,EAAY8P,EAAWpa,GACvBuT,EAAiBjJ,EAAY3C,EAC7B6L,EAAgBlJ,EAAY5C,EAC5BnC,EAASqC,EAAqB2L,EAC9BE,EAAgB7L,EAAqB4L,EAC3CR,EAAqB1I,GAAa,CAAC,EACnC0I,EAAqB1I,GAAW3C,GAAapC,EAC7CyN,EAAqB1I,GAAW5C,GAAY+L,CAChD,CACA,IAAM+H,EAAevT,EAAQ,YAC7B,GAAI,GAACuT,GAAgB,CAACA,EAAahX,WAGnC2H,OAAAA,EAAIxG,iBAAiBsC,EAASkE,EAAK,CAACqP,GAAgBA,EAAahX,SAAS,CAAC,EACpE,EACX,CACA,SAASiX,GAAWlhB,EAAQ4R,EAAK,CAC7BA,EAAIlG,oBAAoB1L,EAAQ4R,CAAG,CACvC,CASAlR,KAAKkB,aAAa,SAAW5B,GAAW,CACpC,IAAMmhB,EAAcnhB,EAAOU,KAAKH,WAAW,aAAa,GACpD4gB,GACAA,EAAW,CAEnB,CAAC,EACDzgB,KAAKkB,aAAa,iBAAkB,CAAC5B,EAAQU,EAAMkR,IAAQ,CACvDA,EAAItG,YAAYtL,EAAQ,iBAAkB6F,GAC/B,SAAUuD,EAAMG,EAAM,CACzB7I,EAAKc,QAAQuD,kBAAkB,iBAAkBwE,EAAK,EAAE,CAC5D,CACH,CACL,CAAC,EACD7I,KAAKkB,aAAa,SAAW5B,GAAW,CACpC,IAAMmO,EAAM,MACNiT,EAAQ,QACdnB,GAAWjgB,EAAQmO,EAAKiT,EAAO,SAAS,EACxCnB,GAAWjgB,EAAQmO,EAAKiT,EAAO,UAAU,EACzCnB,GAAWjgB,EAAQmO,EAAKiT,EAAO,WAAW,CAC9C,CAAC,EACD1gB,KAAKkB,aAAa,wBAA0B5B,GAAW,CACnDigB,GAAWjgB,EAAQ,UAAW,SAAU,gBAAgB,EACxDigB,GAAWjgB,EAAQ,aAAc,YAAa,gBAAgB,EAC9DigB,GAAWjgB,EAAQ,gBAAiB,eAAgB,gBAAgB,CACxE,CAAC,EACDU,KAAKkB,aAAa,WAAY,CAAC5B,EAAQU,IAAS,CAC5C,IAAM2gB,EAAkB,CAAC,QAAS,SAAU,SAAS,EACrD,QAAS5b,EAAI,EAAGA,EAAI4b,EAAgB3b,OAAQD,IAAK,CAC7C,IAAMtF,EAAOkhB,EAAgB5b,GAC7B6F,GAAYtL,EAAQG,EAAM,CAAC0F,EAAUmF,EAAQ7K,IAClC,SAAUmhB,EAAG/X,EAAM,CACtB,OAAO7I,EAAKc,QAAQqB,IAAIgD,EAAU7F,EAAQuJ,EAAMpJ,CAAI,CACxD,CACH,CACL,CACJ,CAAC,EACDO,KAAKkB,aAAa,cAAe,CAAC5B,EAAQU,EAAMkR,IAAQ,CACpDsP,GAAWlhB,EAAQ4R,CAAG,EACtBoP,GAAiBhhB,EAAQ4R,CAAG,EAE5B,IAAM2P,EAA4BvhB,EAAO,0BACrCuhB,GAA6BA,EAA0BtX,WACvD2H,EAAIxG,iBAAiBpL,EAAQ4R,EAAK,CAAC2P,EAA0BtX,SAAS,CAAC,CAE/E,CAAC,EACDvJ,KAAKkB,aAAa,mBAAoB,CAAC5B,EAAQU,EAAMkR,IAAQ,CACzD3F,GAAW,kBAAkB,EAC7BA,GAAW,wBAAwB,CACvC,CAAC,EACDvL,KAAKkB,aAAa,uBAAwB,CAAC5B,EAAQU,EAAMkR,IAAQ,CAC7D3F,GAAW,sBAAsB,CACrC,CAAC,EACDvL,KAAKkB,aAAa,aAAc,CAAC5B,EAAQU,EAAMkR,IAAQ,CACnD3F,GAAW,YAAY,CAC3B,CAAC,EACDvL,KAAKkB,aAAa,cAAe,CAAC5B,EAAQU,EAAMkR,IAAQ,CACpD8N,GAAwB9N,EAAK5R,CAAM,CACvC,CAAC,EACDU,KAAKkB,aAAa,iBAAkB,CAAC5B,EAAQU,EAAMkR,IAAQ,CACvDkP,GAAoB9gB,EAAQ4R,CAAG,CACnC,CAAC,EACDlR,KAAKkB,aAAa,MAAO,CAAC5B,EAAQU,IAAS,CAEvC8gB,EAASxhB,CAAM,EACf,IAAMyhB,EAAWlU,EAAW,SAAS,EAC/BmU,EAAWnU,EAAW,SAAS,EAC/BoU,EAAepU,EAAW,aAAa,EACvCqU,EAAgBrU,EAAW,cAAc,EACzCsU,EAAUtU,EAAW,QAAQ,EAC7BuU,EAA6BvU,EAAW,yBAAyB,EACvE,SAASiU,EAASjV,EAAQ,CACtB,IAAMwV,EAAiBxV,EAAO,eAC9B,GAAI,CAACwV,EAED,OAEJ,IAAMC,EAA0BD,EAAe9X,UAC/C,SAASgY,EAAgBlc,EAAQ,CAC7B,OAAOA,EAAO0b,EAClB,CACA,IAAIS,EAAiBF,EAAwB/U,IACzCkV,EAAoBH,EAAwB9U,IAChD,GAAI,CAACgV,EAAgB,CACjB,IAAMX,EAA4BhV,EAAO,0BACzC,GAAIgV,EAA2B,CAC3B,IAAMa,EAAqCb,EAA0BtX,UACrEiY,EAAiBE,EAAmCnV,IACpDkV,EAAoBC,EAAmClV,GAC3D,CACJ,CACA,IAAMmV,EAAqB,mBACrBC,EAAY,YAClB,SAAS9d,EAAapB,EAAM,CACxB,IAAMa,EAAOb,EAAKa,KACZ8B,EAAS9B,EAAK8B,OACpBA,EAAO6b,GAAiB,GACxB7b,EAAO+b,GAA8B,GAErC,IAAMhT,EAAW/I,EAAO4b,GACnBO,IACDA,EAAiBnc,EAAOkH,IACxBkV,EAAoBpc,EAAOmH,KAE3B4B,GACAqT,EAAkB7Y,KAAKvD,EAAQsc,EAAoBvT,CAAQ,EAE/D,IAAMyT,GAAcxc,EAAO4b,GAAgB,IAAM,CAC7C,GAAI5b,EAAOyc,aAAezc,EAAO0c,KAG7B,GAAI,CAACxe,EAAKye,SAAW3c,EAAO6b,IAAkBxe,EAAKE,QAAUgf,EAAW,CAQpE,IAAMK,EAAY5c,EAAOrF,EAAKH,WAAW,WAAW,GACpD,GAAIwF,EAAOsQ,SAAW,GAAKsM,GAAaA,EAAUjd,OAAS,EAAG,CAC1D,IAAMkd,GAAYxf,EAAKJ,OACvBI,EAAKJ,OAAS,UAAY,CAGtB,IAAM2f,GAAY5c,EAAOrF,EAAKH,WAAW,WAAW,GACpD,QAASkF,EAAI,EAAGA,EAAIkd,GAAUjd,OAAQD,IAC9Bkd,GAAUld,KAAOrC,GACjBuf,GAAUhO,OAAOlP,EAAG,CAAC,EAGzB,CAACxB,EAAKye,SAAWtf,EAAKE,QAAUgf,GAChCM,GAAUtZ,KAAKlG,CAAI,CAE3B,EACAuf,EAAUja,KAAKtF,CAAI,CACvB,MAEIA,EAAKJ,OAAM,CAEnB,KACS,CAACiB,EAAKye,SAAW3c,EAAO6b,KAAmB,KAEhD7b,EAAO+b,GAA8B,GAGjD,EACAI,OAAAA,EAAe5Y,KAAKvD,EAAQsc,EAAoBE,EAAW,EACxCxc,EAAO0b,KAEtB1b,EAAO0b,GAAYre,GAEvByf,EAAWra,MAAMzC,EAAQ9B,EAAKsF,IAAI,EAClCxD,EAAO6b,GAAiB,GACjBxe,CACX,CACA,SAAS0f,GAAsB,CAAE,CACjC,SAASvC,EAAUnd,EAAM,CACrB,IAAMa,EAAOb,EAAKa,KAGlBA,OAAAA,EAAKye,QAAU,GACRK,EAAYva,MAAMvE,EAAK8B,OAAQ9B,EAAKsF,IAAI,CACnD,CACA,IAAMyZ,EAAa1X,GAAY0W,EAAyB,OAAQ,IAAM,SAAU5Y,EAAMG,EAAM,CACxFH,OAAAA,EAAKsY,GAAYnY,EAAK,IAAM,GAC5BH,EAAKyY,GAAWtY,EAAK,GACdyZ,EAAWxa,MAAMY,EAAMG,CAAI,CACtC,CAAC,EACK0Z,EAAwB,sBACxBC,EAAoB3V,EAAW,mBAAmB,EAClD4V,EAAsB5V,EAAW,qBAAqB,EACtDsV,EAAavX,GAAY0W,EAAyB,OAAQ,IAAM,SAAU5Y,EAAMG,EAAM,CAOxF,GANI7I,EAAKc,QAAQ2hB,KAAyB,IAMtC/Z,EAAKsY,GAEL,OAAOmB,EAAWra,MAAMY,EAAMG,CAAI,EAEjC,CACD,IAAML,EAAU,CAAEnD,OAAQqD,EAAMga,IAAKha,EAAKyY,GAAU3d,WAAY,GAAOqF,KAAMA,EAAMmZ,QAAS,EAAM,EAC5Ftf,EAAOkK,GAAiC2V,EAAuBH,EAAqB5Z,EAAS1E,EAAc+b,CAAS,EACtHnX,GAAQA,EAAK0Y,KAAgC,IAAQ,CAAC5Y,EAAQwZ,SAC9Dtf,EAAKE,QAAUgf,GAIflf,EAAKJ,OAAM,CAEnB,CACJ,CAAC,EACK+f,EAAczX,GAAY0W,EAAyB,QAAS,IAAM,SAAU5Y,EAAMG,EAAM,CAC1F,IAAMnG,EAAO6e,EAAgB7Y,CAAI,EACjC,GAAIhG,GAAQ,OAAOA,EAAKI,MAAQ,SAAU,CAKtC,GAAIJ,EAAKe,UAAY,MAASf,EAAKa,MAAQb,EAAKa,KAAKye,QACjD,OAEJtf,EAAK7B,KAAK+D,WAAWlC,CAAI,CAC7B,SACS1C,EAAKc,QAAQ0hB,KAAuB,GAEzC,OAAOH,EAAYva,MAAMY,EAAMG,CAAI,CAK3C,CAAC,CACL,CACJ,CAAC,EACD7I,KAAKkB,aAAa,cAAgB5B,GAAW,CAErCA,EAAO,WAAgBA,EAAO,UAAaqjB,aAC3CzV,GAAe5N,EAAO,UAAaqjB,YAAa,CAAC,qBAAsB,eAAe,CAAC,CAE/F,CAAC,EACD3iB,KAAKkB,aAAa,wBAAyB,CAAC5B,EAAQU,IAAS,CAEzD,SAAS4iB,EAA4BvF,EAAS,CAC1C,OAAO,SAAU5L,EAAG,CACGqL,GAAexd,EAAQ+d,CAAO,EACtCY,QAAQlb,GAAa,CAG5B,IAAM8f,EAAwBvjB,EAAO,sBACrC,GAAIujB,EAAuB,CACvB,IAAMC,EAAM,IAAID,EAAsBxF,EAAS,CAAElK,QAAS1B,EAAE0B,QAAS0C,OAAQpE,EAAEC,SAAU,CAAC,EAC1F3O,EAAUT,OAAOwgB,CAAG,CACxB,CACJ,CAAC,CACL,CACJ,CACIxjB,EAAO,wBACPU,EAAK6M,EAAW,kCAAkC,GAC9C+V,EAA4B,oBAAoB,EACpD5iB,EAAK6M,EAAW,yBAAyB,GACrC+V,EAA4B,kBAAkB,EAE1D,CAAC",
  "names": ["global", "performance", "mark", "name", "performanceMeasure", "label", "symbolPrefix", "__symbol__", "checkDuplicate", "Error", "Zone", "constructor", "parent", "zoneSpec", "_parent", "_name", "_properties", "properties", "_zoneDelegate", "_ZoneDelegate", "assertZonePatched", "patches", "root", "zone", "current", "_currentZoneFrame", "currentTask", "_currentTask", "__load_patch", "fn", "ignoreDuplicate", "hasOwnProperty", "perfName", "_api", "get", "key", "getZoneWith", "fork", "wrap", "callback", "source", "_callback", "intercept", "runGuarded", "arguments", "run", "applyThis", "applyArgs", "invoke", "error", "handleError", "runTask", "task", "NO_ZONE", "state", "notScheduled", "type", "eventTask", "macroTask", "reEntryGuard", "running", "_transitionTo", "scheduled", "runCount", "previousTask", "data", "isPeriodic", "cancelFn", "undefined", "invokeTask", "unknown", "_updateTaskCount", "scheduleTask", "newZone", "scheduling", "zoneDelegates", "_zoneDelegates", "_zone", "err", "scheduleMicroTask", "customSchedule", "ZoneTask", "microTask", "scheduleMacroTask", "customCancel", "scheduleEventTask", "cancelTask", "canceling", "count", "i", "length", "DELEGATE_ZS", "onHasTask", "delegate", "_", "target", "hasTaskState", "hasTask", "onScheduleTask", "onInvokeTask", "onCancelTask", "parentDelegate", "_taskCounts", "_parentDelegate", "_forkZS", "onFork", "_forkDlgt", "_forkCurrZone", "_interceptZS", "onIntercept", "_interceptDlgt", "_interceptCurrZone", "_invokeZS", "onInvoke", "_invokeDlgt", "_invokeCurrZone", "_handleErrorZS", "onHandleError", "_handleErrorDlgt", "_handleErrorCurrZone", "_scheduleTaskZS", "_scheduleTaskDlgt", "_scheduleTaskCurrZone", "_invokeTaskZS", "_invokeTaskDlgt", "_invokeTaskCurrZone", "_cancelTaskZS", "_cancelTaskDlgt", "_cancelTaskCurrZone", "_hasTaskZS", "_hasTaskDlgt", "_hasTaskDlgtOwner", "_hasTaskCurrZone", "zoneSpecHasTask", "parentHasTask", "targetZone", "apply", "returnTask", "push", "scheduleFn", "value", "isEmpty", "counts", "prev", "next", "change", "options", "_state", "self", "useG", "call", "args", "_numberOfNestedTaskFrames", "drainMicroTaskQueue", "cancelScheduleRequest", "toState", "fromState1", "fromState2", "toString", "handleId", "Object", "prototype", "toJSON", "symbolSetTimeout", "symbolPromise", "symbolThen", "_microTaskQueue", "_isDrainingMicrotaskQueue", "nativeMicroTaskQueuePromise", "nativeScheduleMicroTask", "func", "resolve", "nativeThen", "queue", "onUnhandledError", "microtaskDrainDone", "symbol", "currentZoneFrame", "noop", "showUncaughtError", "patchEventTarget", "patchOnProperties", "patchMethod", "bindArguments", "patchThen", "patchMacroTask", "patchEventPrototype", "isIEOrEdge", "getGlobalObjects", "ObjectDefineProperty", "ObjectGetOwnPropertyDescriptor", "ObjectCreate", "ArraySlice", "patchClass", "wrapWithCurrentZone", "filterProperties", "attachOriginToPatched", "_redefineProperty", "patchCallbacks", "window", "getOwnPropertyDescriptor", "defineProperty", "ObjectGetPrototypeOf", "getPrototypeOf", "create", "Array", "slice", "ADD_EVENT_LISTENER_STR", "REMOVE_EVENT_LISTENER_STR", "ZONE_SYMBOL_ADD_EVENT_LISTENER", "ZONE_SYMBOL_REMOVE_EVENT_LISTENER", "TRUE_STR", "FALSE_STR", "ZONE_SYMBOL_PREFIX", "scheduleMacroTaskWithCurrentZone", "zoneSymbol", "isWindowExists", "internalWindow", "_global", "REMOVE_ATTRIBUTE", "patchPrototype", "fnNames", "prototypeDesc", "isPropertyWritable", "patched", "propertyDesc", "writable", "set", "isWebWorker", "WorkerGlobalScope", "isNode", "process", "isBrowser", "isMix", "zoneSymbolEventNames$1", "wrapFn", "event", "eventNameSymbol", "listener", "result", "errorEvent", "message", "filename", "lineno", "colno", "preventDefault", "patchProperty", "obj", "prop", "desc", "enumerable", "configurable", "onPropPatchedSymbol", "originalDescGet", "originalDescSet", "eventName", "newValue", "removeEventListener", "addEventListener", "removeAttribute", "onProperties", "j", "originalInstanceKey", "className", "OriginalClass", "a", "instance", "patchFn", "proto", "delegateName", "patchDelegate", "funcName", "metaCreator", "setNative", "cbIdx", "meta", "original", "isDetectedIEOrEdge", "ieOrEdge", "isIE", "ua", "navigator", "userAgent", "indexOf", "api", "readableObjectToString", "JSON", "stringify", "_uncaughtPromiseErrors", "isDisableWrappingUncaughtPromiseRejection", "creationTrace", "e", "rejection", "console", "stack", "uncaughtPromiseError", "shift", "throwOriginal", "handleUnhandledRejection", "UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL", "handler", "isThenable", "then", "forwardResolution", "forwardRejection", "ZoneAwarePromise", "reject", "symbolState", "symbolValue", "symbolFinally", "symbolParentPromiseValue", "symbolParentPromiseState", "UNRESOLVED", "RESOLVED", "REJECTED", "REJECTED_NO_CATCH", "makeResolver", "promise", "v", "resolvePromise", "once", "wasCalled", "wrappedFunction", "TYPE_ERROR", "CURRENT_TASK_TRACE_SYMBOL", "onceWrapper", "TypeError", "clearRejectedNoCatch", "trace", "scheduleResolveOrReject", "REJECTION_HANDLED_HANDLER", "splice", "chainPromise", "onFulfilled", "onRejected", "promiseState", "parentPromiseValue", "isFinallyPromise", "ZONE_AWARE_PROMISE_TO_STRING", "AggregateError", "any", "values", "Symbol", "iterator", "Promise", "promises", "finished", "errors", "race", "res", "rej", "onResolve", "onReject", "all", "allWithCallback", "allSettled", "thenCallback", "status", "errorCallback", "reason", "unresolvedCount", "valueIndex", "resolvedValues", "curValueIndex", "thenErr", "executor", "toStringTag", "species", "_a", "C", "catch", "finally", "onFinally", "NativePromise", "symbolThenPatched", "Ctor", "originalThen", "zoneify", "resultPromise", "ctor", "originalFunctionToString", "Function", "ORIGINAL_DELEGATE_SYMBOL", "PROMISE_SYMBOL", "ERROR_SYMBOL", "newFunctionToString", "originalDelegate", "nativePromise", "nativeError", "originalObjectToString", "PROMISE_OBJECT_TO_STRING", "passiveSupported", "OPTIMIZED_ZONE_EVENT_TASK_DATA", "zoneSymbolEventNames", "globalSources", "EVENT_NAME_SYMBOL_REGX", "RegExp", "IMMEDIATE_PROPAGATION_SYMBOL", "prepareEventNames", "eventNameToString", "falseEventName", "trueEventName", "symbolCapture", "apis", "patchOptions", "ADD_EVENT_LISTENER", "add", "REMOVE_EVENT_LISTENER", "rm", "LISTENERS_EVENT_LISTENER", "listeners", "REMOVE_ALL_LISTENERS_EVENT_LISTENER", "rmAll", "zoneSymbolAddEventListener", "ADD_EVENT_LISTENER_SOURCE", "PREPEND_EVENT_LISTENER", "PREPEND_EVENT_LISTENER_SOURCE", "isRemoved", "handleEvent", "globalCallback", "context", "isCapture", "tasks", "copyTasks", "globalZoneAwareCallback", "globalZoneAwareCaptureCallback", "patchEventTargetMethods", "useGlobalCallback", "validateHandler", "vh", "chkDup", "returnTarget", "rt", "taskData", "nativeAddEventListener", "nativeRemoveEventListener", "nativeListeners", "nativeRemoveAllListeners", "nativePrependEventListener", "prepend", "buildEventListenerOptions", "passive", "capture", "assign", "customScheduleGlobal", "isExisting", "customCancelGlobal", "symbolEventNames", "symbolEventName", "existingTasks", "allRemoved", "customScheduleNonGlobal", "customSchedulePrepend", "customCancelNonGlobal", "compareTaskCallbackVsDelegate", "typeOfDelegate", "compare", "diff", "unpatchedEvents", "passiveEvents", "makeAddListener", "nativeListener", "addSource", "customScheduleFn", "customCancelFn", "transferEventName", "isHandleEvent", "constructorName", "targetSource", "unshift", "existingTask", "onPropertySymbol", "findEventTasks", "symbolCaptureEventName", "captureTasks", "removeTasks", "keys", "match", "exec", "evtName", "results", "foundTasks", "captureFalseTasks", "captureTrueTasks", "concat", "Event", "targetName", "method", "callbacks", "nativeDelegate", "opts", "forEach", "descriptor", "ignoreProperties", "tip", "filter", "ip", "targetIgnoreProperties", "op", "patchFilteredProperties", "filteredProperties", "getOnEventNames", "getOwnPropertyNames", "startsWith", "map", "substring", "propertyDescriptorPatch", "patchTargets", "ignoreErrorProperties", "eventNames", "SYMBOL_BLACK_LISTED_EVENTS", "SYMBOL_UNPATCHED_EVENTS", "taskSymbol", "patchTimer", "setName", "cancelName", "nameSuffix", "clearNative", "tasksByHandleId", "clearTask", "delay", "handle", "ref", "unref", "bind", "id", "patchCustomElements", "customElements", "eventTargetPatch", "EVENT_TARGET", "patchEvent", "legacyPatch", "clear", "blockingMethods", "s", "XMLHttpRequestEventTarget", "patchXHR", "XHR_TASK", "XHR_SYNC", "XHR_LISTENER", "XHR_SCHEDULED", "XHR_URL", "XHR_ERROR_BEFORE_SCHEDULED", "XMLHttpRequest", "XMLHttpRequestPrototype", "findPendingTask", "oriAddListener", "oriRemoveListener", "XMLHttpRequestEventTargetPrototype", "READY_STATE_CHANGE", "SCHEDULED", "newListener", "readyState", "DONE", "aborted", "loadTasks", "oriInvoke", "sendNative", "placeholderCallback", "abortNative", "openNative", "XMLHTTPREQUEST_SOURCE", "fetchTaskAborting", "fetchTaskScheduling", "url", "geolocation", "findPromiseRejectionHandler", "PromiseRejectionEvent", "evt"]
}
